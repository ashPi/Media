/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Design;
import Structure.cm2100part3startingpoint.*;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.*;
import java.io.File;
import java.util.Collections;
/**
 *
 * @author ashayapi
 */
public class MainScreen extends javax.swing.JFrame {
    User user;
    PlayList myMedia;
    PlayList playing;
    PlayList freebies;
    /**
     * Creates new form MainScreen
     */
    public MainScreen(User u) {
        this.user = u;
        //user.topUp(0);
        myMedia = new PlayList(u);
        File mM = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/" + user.getUsername() + ".txt");
        myMedia.readFromFile(mM);
        /*for (Media m : myMedia.getItems()) {
            System.out.println("Mm: " + m.toString());
        }*/
        this.playing = new PlayList(u);
        //File pM = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/" + user.getUsername() + "-playing.txt");
        //playing.readFromFile(pM);
        this.freebies = new PlayList(u);
        //File fM = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/freebies.txt");
        //freebies.readFromFile(fM);
        //User.updateDatabase(user, user.getUsername());
        initComponents();
        
        //File source = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/playlist.txt");
        //playing.readFromFile(source);
        /*DefaultListModel lm = new DefaultListModel();
        /*for (Media item : playing.getItems()) {
            listModel.addElement(item.toString());
        }
        playlistList = new JList(listModel);
        lm.addElement("Sis");
        lm.addElement("Sisi");
        lm.addElement("Sissa");
        lm.addElement("Siso");*/
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        walletDialog = new javax.swing.JDialog();
        topUpPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        balanceLabel = new javax.swing.JLabel();
        topUpButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        topUpAmountTextField = new javax.swing.JTextField();
        withdrawPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        balanceWithdrawalLabel = new javax.swing.JLabel();
        withdrawButton = new javax.swing.JButton();
        cancelWithdrawalButton = new javax.swing.JButton();
        withdrawalAmountTextField = new javax.swing.JTextField();
        freebiesFrame = new javax.swing.JFrame();
        freebiesPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        freebiesList = new javax.swing.JList<>();
        cancelFreebiesButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        addMediaFrame = new javax.swing.JFrame();
        addToPlaylistPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        myMediaList = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();
        buttonsAddPanel = new javax.swing.JPanel();
        closeAddMediaButton = new javax.swing.JButton();
        addMyMediaButton = new javax.swing.JButton();
        browseMediaFrame = new javax.swing.JFrame();
        browseMediaPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        browseMediaList = new javax.swing.JList<>();
        jLabel12 = new javax.swing.JLabel();
        closeBrowseMediaButton = new javax.swing.JButton();
        sortDialog = new javax.swing.JDialog();
        sortPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        sortButton = new javax.swing.JButton();
        cancelSortButton = new javax.swing.JButton();
        costSortRB = new javax.swing.JRadioButton();
        durationSortRB = new javax.swing.JRadioButton();
        titleSortRB = new javax.swing.JRadioButton();
        sortGroup = new javax.swing.ButtonGroup();
        purchaseFrame = new javax.swing.JFrame();
        purchasePanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        cancelPurchaseButton = new javax.swing.JButton();
        purchaseCB = new javax.swing.JComboBox<>();
        musicDialog = new javax.swing.JDialog();
        musicPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        durationTextField = new javax.swing.JTextField();
        artistTextField = new javax.swing.JTextField();
        purchaseMusicButton = new javax.swing.JButton();
        cancelMusicButton = new javax.swing.JButton();
        filmDialog = new javax.swing.JDialog();
        filmPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        titleFilmTF = new javax.swing.JTextField();
        durationFilmTF = new javax.swing.JTextField();
        ageFilmTF = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        directorFilmTF = new javax.swing.JTextField();
        purchaseFilmButton = new javax.swing.JButton();
        cancelFilmButton = new javax.swing.JButton();
        seriesDialog = new javax.swing.JDialog();
        seriesPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        titleSeriesTF = new javax.swing.JTextField();
        durationSeriesTF = new javax.swing.JTextField();
        ageSeriesTF = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        episodeSeriesTF = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        epTitleTF = new javax.swing.JTextField();
        purchaseSeriesButton = new javax.swing.JButton();
        cancelSeriesButton = new javax.swing.JButton();
        userPanel = new javax.swing.JPanel();
        userNameLabel = new javax.swing.JLabel();
        walletLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        suggestedPanel = new javax.swing.JPanel();
        suggestedLabel = new javax.swing.JLabel();
        currentlyPlayingPanel = new javax.swing.JPanel();
        photoLabel = new javax.swing.JLabel();
        photoButton = new javax.swing.JButton();
        shuffleButton = new javax.swing.JButton();
        moveDownButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        moveUpButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        playingListPanel = new javax.swing.JPanel();
        playListNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        playlistList = new javax.swing.JList<>();
        runtimeLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        profileMenu = new javax.swing.JMenu();
        topUpMenuItem = new javax.swing.JMenuItem();
        withdrawMenuItem = new javax.swing.JMenuItem();
        changeNameMenuItem = new javax.swing.JMenuItem();
        logOutMenuItem = new javax.swing.JMenuItem();
        playlistMenu = new javax.swing.JMenu();
        addMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        loadMenuItem = new javax.swing.JMenuItem();
        myMediaMenu = new javax.swing.JMenu();
        sortMenuItem = new javax.swing.JMenuItem();
        purchaseMenuItem = new javax.swing.JMenuItem();
        browseMediaMenuItem = new javax.swing.JMenuItem();
        freebiesMenu = new javax.swing.JMenu();
        freebiesMenuItem = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenu();

        walletDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        walletDialog.setTitle("Wallet");
        walletDialog.setBounds(new java.awt.Rectangle(0, 0, 370, 288));
        walletDialog.setResizable(false);
        walletDialog.setSize(new java.awt.Dimension(379, 228));

        topUpPanel.setVisible(false);
        topUpPanel.setBackground(new java.awt.Color(161, 214, 226));
        topUpPanel.setPreferredSize(new java.awt.Dimension(379, 228));

        jLabel1.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(241, 241, 242));
        jLabel1.setText("Your current balance is");

        jLabel2.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(241, 241, 242));
        jLabel2.setText("<html>Please enter the top-up amount below</html>");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/wallet-icon-blue.png"))); // NOI18N

        balanceLabel.setText("Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        balanceLabel.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        balanceLabel.setForeground(new java.awt.Color(241, 241, 242));

        topUpButton.setBackground(new java.awt.Color(241, 241, 242));
        topUpButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        topUpButton.setForeground(new java.awt.Color(25, 149, 173));
        topUpButton.setText("Top up");
        topUpButton.setToolTipText("Click here to confirm your top-up");
        topUpButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        topUpButton.setBorderPainted(false);
        topUpButton.setContentAreaFilled(false);
        topUpButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        topUpButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                topUpButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                topUpButtonFocusLost(evt);
            }
        });
        topUpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                topUpButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                topUpButtonMouseEntered(evt);
            }
        });
        topUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("Click here to cancel your top-up");
        cancelButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelButton.setBorderPainted(false);
        cancelButton.setContentAreaFilled(false);
        cancelButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelButton.setSize(new java.awt.Dimension(97, 29));
        cancelButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelButtonFocusLost(evt);
            }
        });
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelButtonMouseEntered(evt);
            }
        });
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        topUpAmountTextField.setBackground(new java.awt.Color(241, 241, 242));
        topUpAmountTextField.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        topUpAmountTextField.setForeground(new java.awt.Color(25, 149, 173));
        topUpAmountTextField.setText("0.00");
        topUpAmountTextField.setToolTipText("Top-up amount");
        topUpAmountTextField.setCaretColor(new java.awt.Color(25, 149, 173));
        topUpAmountTextField.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        topUpAmountTextField.setSelectionColor(new java.awt.Color(25, 149, 173));
        topUpAmountTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpAmountTextFieldActionPerformed(evt);
            }
        });
        topUpAmountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                topUpAmountTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout topUpPanelLayout = new javax.swing.GroupLayout(topUpPanel);
        topUpPanel.setLayout(topUpPanelLayout);
        topUpPanelLayout.setHorizontalGroup(
            topUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topUpPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(topUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(topUpAmountTextField)
                    .addGroup(topUpPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(topUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(balanceLabel)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(topUpPanelLayout.createSequentialGroup()
                        .addComponent(topUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        topUpPanelLayout.setVerticalGroup(
            topUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topUpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(topUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topUpPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(balanceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topUpAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(topUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        withdrawPanel.setVisible(false);
        withdrawPanel.setBackground(new java.awt.Color(161, 214, 226));
        withdrawPanel.setPreferredSize(new java.awt.Dimension(379, 228));

        jLabel4.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(241, 241, 242));
        jLabel4.setText("Your current balance is");

        jLabel5.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(241, 241, 242));
        jLabel5.setText("<html>Please enter the withdrawal amount below</html>");

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/wallet-icon-blue.png"))); // NOI18N

        balanceWithdrawalLabel.setText("Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        balanceWithdrawalLabel.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        balanceWithdrawalLabel.setForeground(new java.awt.Color(241, 241, 242));

        withdrawButton.setBackground(new java.awt.Color(241, 241, 242));
        withdrawButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        withdrawButton.setForeground(new java.awt.Color(25, 149, 173));
        withdrawButton.setText("Withdraw");
        withdrawButton.setToolTipText("Click here to confirm your withdrawal");
        withdrawButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        withdrawButton.setBorderPainted(false);
        withdrawButton.setContentAreaFilled(false);
        withdrawButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        withdrawButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                withdrawButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                withdrawButtonFocusLost(evt);
            }
        });
        withdrawButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                withdrawButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                withdrawButtonMouseEntered(evt);
            }
        });
        withdrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawButtonActionPerformed(evt);
            }
        });

        cancelWithdrawalButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelWithdrawalButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        cancelWithdrawalButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelWithdrawalButton.setText("Cancel");
        cancelWithdrawalButton.setToolTipText("Click here to cancel your withdrawal");
        cancelWithdrawalButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelWithdrawalButton.setBorderPainted(false);
        cancelWithdrawalButton.setContentAreaFilled(false);
        cancelWithdrawalButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelWithdrawalButton.setSize(new java.awt.Dimension(97, 29));
        cancelWithdrawalButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelWithdrawalButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelWithdrawalButtonFocusLost(evt);
            }
        });
        cancelWithdrawalButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelWithdrawalButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelWithdrawalButtonMouseEntered(evt);
            }
        });
        cancelWithdrawalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelWithdrawalButtonActionPerformed(evt);
            }
        });

        withdrawalAmountTextField.setBackground(new java.awt.Color(241, 241, 242));
        withdrawalAmountTextField.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        withdrawalAmountTextField.setForeground(new java.awt.Color(25, 149, 173));
        withdrawalAmountTextField.setText("0.00");
        withdrawalAmountTextField.setToolTipText("Withdrawal amount");
        withdrawalAmountTextField.setCaretColor(new java.awt.Color(25, 149, 173));
        withdrawalAmountTextField.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        withdrawalAmountTextField.setSelectionColor(new java.awt.Color(25, 149, 173));
        withdrawalAmountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                withdrawalAmountTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout withdrawPanelLayout = new javax.swing.GroupLayout(withdrawPanel);
        withdrawPanel.setLayout(withdrawPanelLayout);
        withdrawPanelLayout.setHorizontalGroup(
            withdrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(withdrawPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(withdrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(withdrawalAmountTextField)
                    .addGroup(withdrawPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(withdrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(balanceWithdrawalLabel)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(withdrawPanelLayout.createSequentialGroup()
                        .addComponent(withdrawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(cancelWithdrawalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        withdrawPanelLayout.setVerticalGroup(
            withdrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(withdrawPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(withdrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(withdrawPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(balanceWithdrawalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(withdrawalAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(withdrawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(withdrawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelWithdrawalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout walletDialogLayout = new javax.swing.GroupLayout(walletDialog.getContentPane());
        walletDialog.getContentPane().setLayout(walletDialogLayout);
        walletDialogLayout.setHorizontalGroup(
            walletDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topUpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(walletDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(walletDialogLayout.createSequentialGroup()
                    .addGap(1, 1, 1)
                    .addComponent(withdrawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGap(2, 2, 2)))
        );
        walletDialogLayout.setVerticalGroup(
            walletDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(topUpPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(walletDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(walletDialogLayout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addComponent(withdrawPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .addGap(4, 4, 4)))
        );

        freebiesFrame.setVisible(false);
        freebiesFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        freebiesFrame.setTitle("Freebies Library");
        freebiesFrame.setBackground(new java.awt.Color(161, 214, 226));
        freebiesFrame.setSize(new java.awt.Dimension(668, 475));

        freebiesPanel.setBackground(new java.awt.Color(161, 214, 226));
        freebiesPanel.setSize(new java.awt.Dimension(668, 475));

        jLabel7.setFont(new java.awt.Font("Shree Devanagari 714", 0, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(241, 241, 242));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Freebies");

        File freebiesFile = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/freebies.txt");
        freebies.readFromFile(freebiesFile);
        DefaultListModel freebiesModel = new DefaultListModel();
        for (Media item : freebies.getItems()) {
            freebiesModel.addElement(item.toString());
        }
        freebiesList = new JList(freebiesModel);
        freebiesList.setBackground(new java.awt.Color(161, 214, 226));
        freebiesList.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        freebiesList.setForeground(new java.awt.Color(241, 241, 242));
        freebiesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        freebiesList.setSelectedIndex(0);
        freebiesList.setSelectionBackground(new java.awt.Color(25, 149, 173));
        jScrollPane2.setViewportView(freebiesList);

        cancelFreebiesButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelFreebiesButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        cancelFreebiesButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelFreebiesButton.setText("Close");
        cancelFreebiesButton.setToolTipText("Click here to exit the freebies library");
        cancelFreebiesButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelFreebiesButton.setBorderPainted(false);
        cancelFreebiesButton.setContentAreaFilled(false);
        cancelFreebiesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelFreebiesButton.setSize(new java.awt.Dimension(97, 29));
        cancelFreebiesButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelFreebiesButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelFreebiesButtonFocusLost(evt);
            }
        });
        cancelFreebiesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelFreebiesButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelFreebiesButtonMouseEntered(evt);
            }
        });
        cancelFreebiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelFreebiesButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(241, 241, 242));
        addButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        addButton.setForeground(new java.awt.Color(25, 149, 173));
        addButton.setText("Add");
        addButton.setToolTipText("Click here to add the selected item to your media");
        addButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        addButton.setBorderPainted(false);
        addButton.setContentAreaFilled(false);
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.setSize(new java.awt.Dimension(97, 29));
        addButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addButtonFocusLost(evt);
            }
        });
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Shree Devanagari 714", 0, 27)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(241, 241, 242));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Add them to your media at no cost!");

        javax.swing.GroupLayout freebiesPanelLayout = new javax.swing.GroupLayout(freebiesPanel);
        freebiesPanel.setLayout(freebiesPanelLayout);
        freebiesPanelLayout.setHorizontalGroup(
            freebiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(freebiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(freebiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, freebiesPanelLayout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelFreebiesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE))
                .addContainerGap())
        );
        freebiesPanelLayout.setVerticalGroup(
            freebiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, freebiesPanelLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(freebiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelFreebiesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout freebiesFrameLayout = new javax.swing.GroupLayout(freebiesFrame.getContentPane());
        freebiesFrame.getContentPane().setLayout(freebiesFrameLayout);
        freebiesFrameLayout.setHorizontalGroup(
            freebiesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(freebiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        freebiesFrameLayout.setVerticalGroup(
            freebiesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(freebiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        freebiesPanel.getAccessibleContext().setAccessibleName("");

        freebiesFrame.setVisible(false);
        addMediaFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMediaFrame.setTitle("My Media ");
        addMediaFrame.setBackground(new java.awt.Color(161, 214, 226));
        addMediaFrame.setSize(new java.awt.Dimension(668, 475));

        addToPlaylistPanel.setBackground(new java.awt.Color(161, 214, 226));
        addToPlaylistPanel.setSize(new java.awt.Dimension(668, 475));

        jLabel9.setFont(new java.awt.Font("Shree Devanagari 714", 0, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(241, 241, 242));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("My Media");
        jLabel9.setToolTipText("");

        /*File mediaFile = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/" + user.getUsername() + ".txt");
        myMedia.readFromFile(mediaFile);
        DefaultListModel mediaModel = new DefaultListModel();
        for (Media item : myMedia.getItems()) {
            mediaModel.addElement(item.toString());
        }
        myMediaList = new JList(mediaModel);*/
        myMediaList.setBackground(new java.awt.Color(161, 214, 226));
        myMediaList.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        myMediaList.setForeground(new java.awt.Color(241, 241, 242));
        myMediaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        myMediaList.setSelectedIndex(0);
        myMediaList.setSelectionBackground(new java.awt.Color(25, 149, 173));
        jScrollPane3.setViewportView(myMediaList);

        jLabel10.setFont(new java.awt.Font("Shree Devanagari 714", 0, 27)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(241, 241, 242));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Add media to the currently playing list");

        buttonsAddPanel.setBackground(new java.awt.Color(161, 214, 226));

        closeAddMediaButton.setBackground(new java.awt.Color(241, 241, 242));
        closeAddMediaButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        closeAddMediaButton.setForeground(new java.awt.Color(25, 149, 173));
        closeAddMediaButton.setText("Close");
        closeAddMediaButton.setToolTipText("Click here to exit the freebies library");
        closeAddMediaButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        closeAddMediaButton.setBorderPainted(false);
        closeAddMediaButton.setContentAreaFilled(false);
        closeAddMediaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeAddMediaButton.setSize(new java.awt.Dimension(97, 29));
        closeAddMediaButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                closeAddMediaButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                closeAddMediaButtonFocusLost(evt);
            }
        });
        closeAddMediaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeAddMediaButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeAddMediaButtonMouseEntered(evt);
            }
        });
        closeAddMediaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeAddMediaButtonActionPerformed(evt);
            }
        });

        addMyMediaButton.setBackground(new java.awt.Color(241, 241, 242));
        addMyMediaButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        addMyMediaButton.setForeground(new java.awt.Color(25, 149, 173));
        addMyMediaButton.setText("Add");
        addMyMediaButton.setToolTipText("Click here to add the selected item to your media");
        addMyMediaButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        addMyMediaButton.setBorderPainted(false);
        addMyMediaButton.setContentAreaFilled(false);
        addMyMediaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addMyMediaButton.setSize(new java.awt.Dimension(97, 29));
        addMyMediaButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addMyMediaButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addMyMediaButtonFocusLost(evt);
            }
        });
        addMyMediaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addMyMediaButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addMyMediaButtonMouseEntered(evt);
            }
        });
        addMyMediaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMyMediaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsAddPanelLayout = new javax.swing.GroupLayout(buttonsAddPanel);
        buttonsAddPanel.setLayout(buttonsAddPanelLayout);
        buttonsAddPanelLayout.setHorizontalGroup(
            buttonsAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsAddPanelLayout.createSequentialGroup()
                .addComponent(addMyMediaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeAddMediaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        buttonsAddPanelLayout.setVerticalGroup(
            buttonsAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonsAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                .addComponent(addMyMediaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(closeAddMediaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout addToPlaylistPanelLayout = new javax.swing.GroupLayout(addToPlaylistPanel);
        addToPlaylistPanel.setLayout(addToPlaylistPanelLayout);
        addToPlaylistPanelLayout.setHorizontalGroup(
            addToPlaylistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(addToPlaylistPanelLayout.createSequentialGroup()
                .addGroup(addToPlaylistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addToPlaylistPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(buttonsAddPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane3)
        );
        addToPlaylistPanelLayout.setVerticalGroup(
            addToPlaylistPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addToPlaylistPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonsAddPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addMediaFrameLayout = new javax.swing.GroupLayout(addMediaFrame.getContentPane());
        addMediaFrame.getContentPane().setLayout(addMediaFrameLayout);
        addMediaFrameLayout.setHorizontalGroup(
            addMediaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addToPlaylistPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addMediaFrameLayout.setVerticalGroup(
            addMediaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addToPlaylistPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        freebiesFrame.setVisible(false);
        browseMediaFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        browseMediaFrame.setTitle("My Media ");
        browseMediaFrame.setBackground(new java.awt.Color(161, 214, 226));
        browseMediaFrame.setSize(new java.awt.Dimension(668, 475));

        browseMediaPanel.setBackground(new java.awt.Color(161, 214, 226));
        browseMediaPanel.setSize(new java.awt.Dimension(668, 475));

        jLabel11.setFont(new java.awt.Font("Shree Devanagari 714", 0, 48)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(241, 241, 242));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("My Media");
        jLabel11.setToolTipText("");

        /*File mediaFile = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/" + user.getUsername() + ".txt");
        myMedia.readFromFile(mediaFile);
        DefaultListModel mediaModel = new DefaultListModel();
        for (Media item : myMedia.getItems()) {
            mediaModel.addElement(item.toString());
        }
        myMediaList = new JList(mediaModel);*/
        browseMediaList.setBackground(new java.awt.Color(161, 214, 226));
        browseMediaList.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        browseMediaList.setForeground(new java.awt.Color(241, 241, 242));
        browseMediaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        browseMediaList.setSelectedIndex(0);
        browseMediaList.setSelectionBackground(new java.awt.Color(25, 149, 173));
        jScrollPane4.setViewportView(browseMediaList);

        jLabel12.setFont(new java.awt.Font("Shree Devanagari 714", 0, 27)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(241, 241, 242));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("All the media items that you own");

        closeBrowseMediaButton.setBackground(new java.awt.Color(241, 241, 242));
        closeBrowseMediaButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        closeBrowseMediaButton.setForeground(new java.awt.Color(25, 149, 173));
        closeBrowseMediaButton.setText("Close");
        closeBrowseMediaButton.setToolTipText("Click here to exit the freebies library");
        closeBrowseMediaButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        closeBrowseMediaButton.setBorderPainted(false);
        closeBrowseMediaButton.setContentAreaFilled(false);
        closeBrowseMediaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        closeBrowseMediaButton.setSize(new java.awt.Dimension(97, 29));
        closeBrowseMediaButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                closeBrowseMediaButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                closeBrowseMediaButtonFocusLost(evt);
            }
        });
        closeBrowseMediaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeBrowseMediaButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeBrowseMediaButtonMouseEntered(evt);
            }
        });
        closeBrowseMediaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBrowseMediaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout browseMediaPanelLayout = new javax.swing.GroupLayout(browseMediaPanel);
        browseMediaPanel.setLayout(browseMediaPanelLayout);
        browseMediaPanelLayout.setHorizontalGroup(
            browseMediaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(browseMediaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane4)
            .addGroup(browseMediaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(browseMediaPanelLayout.createSequentialGroup()
                    .addGap(161, 161, 161)
                    .addComponent(closeBrowseMediaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(161, Short.MAX_VALUE)))
        );
        browseMediaPanelLayout.setVerticalGroup(
            browseMediaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, browseMediaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(browseMediaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, browseMediaPanelLayout.createSequentialGroup()
                    .addContainerGap(408, Short.MAX_VALUE)
                    .addComponent(closeBrowseMediaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout browseMediaFrameLayout = new javax.swing.GroupLayout(browseMediaFrame.getContentPane());
        browseMediaFrame.getContentPane().setLayout(browseMediaFrameLayout);
        browseMediaFrameLayout.setHorizontalGroup(
            browseMediaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(browseMediaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        browseMediaFrameLayout.setVerticalGroup(
            browseMediaFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(browseMediaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        sortDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        sortDialog.setTitle("Sort");
        sortDialog.setBounds(new java.awt.Rectangle(0, 0, 370, 288));
        sortDialog.setResizable(false);
        sortDialog.setSize(new java.awt.Dimension(566, 162));

        withdrawPanel.setVisible(false);
        sortPanel.setBackground(new java.awt.Color(161, 214, 226));
        sortPanel.setPreferredSize(new java.awt.Dimension(379, 228));

        jLabel17.setFont(new java.awt.Font("Shree Devanagari 714", 0, 32)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(241, 241, 242));
        jLabel17.setText("Please choose a sorting criterion:");

        sortButton.setBackground(new java.awt.Color(241, 241, 242));
        sortButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 22)); // NOI18N
        sortButton.setForeground(new java.awt.Color(25, 149, 173));
        sortButton.setText("Sort");
        sortButton.setToolTipText("Click here to confirm your choice");
        sortButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        sortButton.setBorderPainted(false);
        sortButton.setContentAreaFilled(false);
        sortButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sortButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sortButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                sortButtonFocusLost(evt);
            }
        });
        sortButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                sortButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sortButtonMouseEntered(evt);
            }
        });
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        cancelSortButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelSortButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 22)); // NOI18N
        cancelSortButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelSortButton.setText("Cancel");
        cancelSortButton.setToolTipText("Click here to cancel the sorting");
        cancelSortButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelSortButton.setBorderPainted(false);
        cancelSortButton.setContentAreaFilled(false);
        cancelSortButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelSortButton.setSize(new java.awt.Dimension(97, 29));
        cancelSortButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelSortButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelSortButtonFocusLost(evt);
            }
        });
        cancelSortButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelSortButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelSortButtonMouseEntered(evt);
            }
        });
        cancelSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSortButtonActionPerformed(evt);
            }
        });

        sortGroup.add(costSortRB);
        costSortRB.setFont(new java.awt.Font("Shree Devanagari 714", 0, 18)); // NOI18N
        costSortRB.setForeground(new java.awt.Color(241, 241, 242));
        costSortRB.setText("Sort by Cost ");
        costSortRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costSortRBActionPerformed(evt);
            }
        });

        sortGroup.add(durationSortRB);
        durationSortRB.setFont(new java.awt.Font("Shree Devanagari 714", 0, 18)); // NOI18N
        durationSortRB.setForeground(new java.awt.Color(241, 241, 242));
        durationSortRB.setText("Sort by Duration");
        durationSortRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationSortRBActionPerformed(evt);
            }
        });

        sortGroup.add(titleSortRB);
        titleSortRB.setFont(new java.awt.Font("Shree Devanagari 714", 0, 18)); // NOI18N
        titleSortRB.setForeground(new java.awt.Color(241, 241, 242));
        titleSortRB.setSelected(true);
        titleSortRB.setText("Sort by Title");

        javax.swing.GroupLayout sortPanelLayout = new javax.swing.GroupLayout(sortPanel);
        sortPanel.setLayout(sortPanelLayout);
        sortPanelLayout.setHorizontalGroup(
            sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sortPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel17))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sortPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sortPanelLayout.createSequentialGroup()
                                .addComponent(sortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancelSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(sortPanelLayout.createSequentialGroup()
                                .addComponent(titleSortRB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(costSortRB)
                                .addGap(27, 27, 27)
                                .addComponent(durationSortRB)))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        sortPanelLayout.setVerticalGroup(
            sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sortPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleSortRB)
                    .addComponent(costSortRB)
                    .addComponent(durationSortRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sortPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelSortButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sortButton))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout sortDialogLayout = new javax.swing.GroupLayout(sortDialog.getContentPane());
        sortDialog.getContentPane().setLayout(sortDialogLayout);
        sortDialogLayout.setHorizontalGroup(
            sortDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sortPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
        );
        sortDialogLayout.setVerticalGroup(
            sortDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sortPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
        );

        freebiesFrame.setVisible(false);
        purchaseFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        purchaseFrame.setTitle("Purchase Media");
        purchaseFrame.setBackground(new java.awt.Color(161, 214, 226));
        purchaseFrame.setResizable(false);
        purchaseFrame.setSize(new java.awt.Dimension(459, 320));

        purchasePanel.setBackground(new java.awt.Color(161, 214, 226));
        purchasePanel.setSize(new java.awt.Dimension(668, 475));

        jLabel13.setFont(new java.awt.Font("Shree Devanagari 714", 0, 30)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(241, 241, 242));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("<html>Please select the type of media you would like to purchase</html>");

        cancelPurchaseButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelPurchaseButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        cancelPurchaseButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelPurchaseButton.setText("Cancel");
        cancelPurchaseButton.setToolTipText("Click here to cancel purchase");
        cancelPurchaseButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelPurchaseButton.setBorderPainted(false);
        cancelPurchaseButton.setContentAreaFilled(false);
        cancelPurchaseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelPurchaseButton.setSize(new java.awt.Dimension(97, 29));
        cancelPurchaseButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelPurchaseButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelPurchaseButtonFocusLost(evt);
            }
        });
        cancelPurchaseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelPurchaseButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelPurchaseButtonMouseEntered(evt);
            }
        });
        cancelPurchaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPurchaseButtonActionPerformed(evt);
            }
        });

        purchaseCB.setBackground(new java.awt.Color(241, 241, 242));
        purchaseCB.setFont(new java.awt.Font("Shree Devanagari 714", 0, 18)); // NOI18N
        purchaseCB.setForeground(new java.awt.Color(25, 149, 173));
        purchaseCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Media", "Music", "Film", "Series" }));
        purchaseCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout purchasePanelLayout = new javax.swing.GroupLayout(purchasePanel);
        purchasePanel.setLayout(purchasePanelLayout);
        purchasePanelLayout.setHorizontalGroup(
            purchasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(purchasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(purchasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchaseCB, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelPurchaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        purchasePanelLayout.setVerticalGroup(
            purchasePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, purchasePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(purchaseCB, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(cancelPurchaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout purchaseFrameLayout = new javax.swing.GroupLayout(purchaseFrame.getContentPane());
        purchaseFrame.getContentPane().setLayout(purchaseFrameLayout);
        purchaseFrameLayout.setHorizontalGroup(
            purchaseFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(purchasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        purchaseFrameLayout.setVerticalGroup(
            purchaseFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(purchasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        musicDialog.setTitle("Purchase Musci");
        musicDialog.setResizable(false);
        musicDialog.setSize(new java.awt.Dimension(517, 237));

        musicPanel.setBackground(new java.awt.Color(161, 214, 226));
        musicPanel.setPreferredSize(new java.awt.Dimension(439, 301));

        jLabel14.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(241, 241, 242));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Duration");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel15.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(241, 241, 242));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Title");
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel16.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(241, 241, 242));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Artist");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        titleTextField.setBackground(new java.awt.Color(241, 241, 242));
        titleTextField.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        titleTextField.setForeground(new java.awt.Color(25, 149, 173));
        titleTextField.setToolTipText("Provide title");
        titleTextField.setCaretColor(new java.awt.Color(25, 149, 173));
        titleTextField.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        titleTextField.setSelectionColor(new java.awt.Color(25, 149, 173));
        titleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleTextFieldActionPerformed(evt);
            }
        });
        titleTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                titleTextFieldKeyTyped(evt);
            }
        });

        durationTextField.setBackground(new java.awt.Color(241, 241, 242));
        durationTextField.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        durationTextField.setForeground(new java.awt.Color(25, 149, 173));
        durationTextField.setToolTipText("Provide duration");
        durationTextField.setCaretColor(new java.awt.Color(25, 149, 173));
        durationTextField.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        durationTextField.setSelectionColor(new java.awt.Color(25, 149, 173));
        durationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationTextFieldActionPerformed(evt);
            }
        });
        durationTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                durationTextFieldKeyTyped(evt);
            }
        });

        artistTextField.setBackground(new java.awt.Color(241, 241, 242));
        artistTextField.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        artistTextField.setForeground(new java.awt.Color(25, 149, 173));
        artistTextField.setToolTipText("Provide artist name");
        artistTextField.setCaretColor(new java.awt.Color(25, 149, 173));
        artistTextField.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        artistTextField.setSelectionColor(new java.awt.Color(25, 149, 173));
        artistTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                artistTextFieldActionPerformed(evt);
            }
        });
        artistTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                artistTextFieldKeyTyped(evt);
            }
        });

        purchaseMusicButton.setBackground(new java.awt.Color(241, 241, 242));
        purchaseMusicButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        purchaseMusicButton.setForeground(new java.awt.Color(25, 149, 173));
        purchaseMusicButton.setText("Purchase");
        purchaseMusicButton.setToolTipText("Click here to confirm purchase");
        purchaseMusicButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        purchaseMusicButton.setBorderPainted(false);
        purchaseMusicButton.setContentAreaFilled(false);
        purchaseMusicButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        purchaseMusicButton.setSize(new java.awt.Dimension(97, 29));
        purchaseMusicButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                purchaseMusicButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                purchaseMusicButtonFocusLost(evt);
            }
        });
        purchaseMusicButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                purchaseMusicButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                purchaseMusicButtonMouseEntered(evt);
            }
        });
        purchaseMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseMusicButtonActionPerformed(evt);
            }
        });

        cancelMusicButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelMusicButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        cancelMusicButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelMusicButton.setText("Cancel");
        cancelMusicButton.setToolTipText("Click here to cancel purchase");
        cancelMusicButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelMusicButton.setBorderPainted(false);
        cancelMusicButton.setContentAreaFilled(false);
        cancelMusicButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelMusicButton.setSize(new java.awt.Dimension(97, 29));
        cancelMusicButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelMusicButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelMusicButtonFocusLost(evt);
            }
        });
        cancelMusicButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelMusicButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelMusicButtonMouseEntered(evt);
            }
        });
        cancelMusicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelMusicButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout musicPanelLayout = new javax.swing.GroupLayout(musicPanel);
        musicPanel.setLayout(musicPanelLayout);
        musicPanelLayout.setHorizontalGroup(
            musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musicPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(musicPanelLayout.createSequentialGroup()
                        .addComponent(purchaseMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(musicPanelLayout.createSequentialGroup()
                        .addGroup(musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(titleTextField)
                            .addComponent(durationTextField)
                            .addComponent(artistTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        musicPanelLayout.setVerticalGroup(
            musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musicPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(artistTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(musicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchaseMusicButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout musicDialogLayout = new javax.swing.GroupLayout(musicDialog.getContentPane());
        musicDialog.getContentPane().setLayout(musicDialogLayout);
        musicDialogLayout.setHorizontalGroup(
            musicDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
            .addGroup(musicDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(musicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
        );
        musicDialogLayout.setVerticalGroup(
            musicDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
            .addGroup(musicDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(musicDialogLayout.createSequentialGroup()
                    .addComponent(musicPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        filmDialog.setTitle("Purchase Musci");
        filmDialog.setResizable(false);
        filmDialog.setSize(new java.awt.Dimension(530, 283));

        filmPanel.setBackground(new java.awt.Color(161, 214, 226));
        filmPanel.setPreferredSize(new java.awt.Dimension(439, 301));

        jLabel18.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(241, 241, 242));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Duration");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel19.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(241, 241, 242));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Title");
        jLabel19.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel20.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(241, 241, 242));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Director");
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        titleFilmTF.setBackground(new java.awt.Color(241, 241, 242));
        titleFilmTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        titleFilmTF.setForeground(new java.awt.Color(25, 149, 173));
        titleFilmTF.setToolTipText("Provide title");
        titleFilmTF.setCaretColor(new java.awt.Color(25, 149, 173));
        titleFilmTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        titleFilmTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        titleFilmTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleFilmTFActionPerformed(evt);
            }
        });
        titleFilmTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                titleFilmTFKeyTyped(evt);
            }
        });

        durationFilmTF.setBackground(new java.awt.Color(241, 241, 242));
        durationFilmTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        durationFilmTF.setForeground(new java.awt.Color(25, 149, 173));
        durationFilmTF.setToolTipText("Provide duration");
        durationFilmTF.setCaretColor(new java.awt.Color(25, 149, 173));
        durationFilmTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        durationFilmTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        durationFilmTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationFilmTFActionPerformed(evt);
            }
        });
        durationFilmTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                durationFilmTFKeyTyped(evt);
            }
        });

        ageFilmTF.setBackground(new java.awt.Color(241, 241, 242));
        ageFilmTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        ageFilmTF.setForeground(new java.awt.Color(25, 149, 173));
        ageFilmTF.setToolTipText("Provide age restriction");
        ageFilmTF.setCaretColor(new java.awt.Color(25, 149, 173));
        ageFilmTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        ageFilmTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        ageFilmTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageFilmTFActionPerformed(evt);
            }
        });
        ageFilmTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ageFilmTFKeyTyped(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(241, 241, 242));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Age Restriction");
        jLabel21.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        directorFilmTF.setBackground(new java.awt.Color(241, 241, 242));
        directorFilmTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        directorFilmTF.setForeground(new java.awt.Color(25, 149, 173));
        directorFilmTF.setToolTipText("Provide director's name");
        directorFilmTF.setCaretColor(new java.awt.Color(25, 149, 173));
        directorFilmTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        directorFilmTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        directorFilmTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directorFilmTFActionPerformed(evt);
            }
        });
        directorFilmTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                directorFilmTFKeyTyped(evt);
            }
        });

        purchaseFilmButton.setBackground(new java.awt.Color(241, 241, 242));
        purchaseFilmButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        purchaseFilmButton.setForeground(new java.awt.Color(25, 149, 173));
        purchaseFilmButton.setText("Purchase");
        purchaseFilmButton.setToolTipText("Click here to confirm purchase");
        purchaseFilmButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        purchaseFilmButton.setBorderPainted(false);
        purchaseFilmButton.setContentAreaFilled(false);
        purchaseFilmButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        purchaseFilmButton.setSize(new java.awt.Dimension(97, 29));
        purchaseFilmButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                purchaseFilmButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                purchaseFilmButtonFocusLost(evt);
            }
        });
        purchaseFilmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                purchaseFilmButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                purchaseFilmButtonMouseEntered(evt);
            }
        });
        purchaseFilmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseFilmButtonActionPerformed(evt);
            }
        });

        cancelFilmButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelFilmButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        cancelFilmButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelFilmButton.setText("Cancel");
        cancelFilmButton.setToolTipText("Click here to cancel purchase");
        cancelFilmButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelFilmButton.setBorderPainted(false);
        cancelFilmButton.setContentAreaFilled(false);
        cancelFilmButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelFilmButton.setSize(new java.awt.Dimension(97, 29));
        cancelFilmButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelFilmButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelFilmButtonFocusLost(evt);
            }
        });
        cancelFilmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelFilmButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelFilmButtonMouseEntered(evt);
            }
        });
        cancelFilmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelFilmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filmPanelLayout = new javax.swing.GroupLayout(filmPanel);
        filmPanel.setLayout(filmPanelLayout);
        filmPanelLayout.setHorizontalGroup(
            filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filmPanelLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleFilmTF)
                            .addComponent(durationFilmTF)))
                    .addGroup(filmPanelLayout.createSequentialGroup()
                        .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(filmPanelLayout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(ageFilmTF))
                    .addGroup(filmPanelLayout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(directorFilmTF)))
                .addContainerGap())
            .addGroup(filmPanelLayout.createSequentialGroup()
                .addComponent(purchaseFilmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(cancelFilmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        filmPanelLayout.setVerticalGroup(
            filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleFilmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationFilmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageFilmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(directorFilmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(purchaseFilmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelFilmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout filmDialogLayout = new javax.swing.GroupLayout(filmDialog.getContentPane());
        filmDialog.getContentPane().setLayout(filmDialogLayout);
        filmDialogLayout.setHorizontalGroup(
            filmDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(filmDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(filmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE))
        );
        filmDialogLayout.setVerticalGroup(
            filmDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 283, Short.MAX_VALUE)
            .addGroup(filmDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(filmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE))
        );

        seriesDialog.setTitle("Purchase Musci");
        seriesDialog.setPreferredSize(new java.awt.Dimension(621, 330));
        seriesDialog.setResizable(false);
        seriesDialog.setSize(new java.awt.Dimension(621, 330));

        seriesPanel.setVisible(true);
        seriesPanel.setBackground(new java.awt.Color(161, 214, 226));
        seriesPanel.setPreferredSize(new java.awt.Dimension(621, 330));
        seriesPanel.setSize(new java.awt.Dimension(621, 330));

        jLabel22.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(241, 241, 242));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Duration");
        jLabel22.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel23.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(241, 241, 242));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Title");
        jLabel23.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel24.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(241, 241, 242));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Episode");
        jLabel24.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        titleSeriesTF.setBackground(new java.awt.Color(241, 241, 242));
        titleSeriesTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        titleSeriesTF.setForeground(new java.awt.Color(25, 149, 173));
        titleSeriesTF.setToolTipText("Provide title");
        titleSeriesTF.setCaretColor(new java.awt.Color(25, 149, 173));
        titleSeriesTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        titleSeriesTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        titleSeriesTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleSeriesTFActionPerformed(evt);
            }
        });
        titleSeriesTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                titleSeriesTFKeyTyped(evt);
            }
        });

        durationSeriesTF.setBackground(new java.awt.Color(241, 241, 242));
        durationSeriesTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        durationSeriesTF.setForeground(new java.awt.Color(25, 149, 173));
        durationSeriesTF.setToolTipText("Provide duration");
        durationSeriesTF.setCaretColor(new java.awt.Color(25, 149, 173));
        durationSeriesTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        durationSeriesTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        durationSeriesTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationSeriesTFActionPerformed(evt);
            }
        });
        durationSeriesTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                durationSeriesTFKeyTyped(evt);
            }
        });

        ageSeriesTF.setBackground(new java.awt.Color(241, 241, 242));
        ageSeriesTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        ageSeriesTF.setForeground(new java.awt.Color(25, 149, 173));
        ageSeriesTF.setToolTipText("Provide age restriction");
        ageSeriesTF.setCaretColor(new java.awt.Color(25, 149, 173));
        ageSeriesTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        ageSeriesTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        ageSeriesTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageSeriesTFActionPerformed(evt);
            }
        });
        ageSeriesTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ageSeriesTFKeyTyped(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(241, 241, 242));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Age Restriction");
        jLabel25.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        episodeSeriesTF.setBackground(new java.awt.Color(241, 241, 242));
        episodeSeriesTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        episodeSeriesTF.setForeground(new java.awt.Color(25, 149, 173));
        episodeSeriesTF.setToolTipText("Provide episode number");
        episodeSeriesTF.setCaretColor(new java.awt.Color(25, 149, 173));
        episodeSeriesTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        episodeSeriesTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        episodeSeriesTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                episodeSeriesTFActionPerformed(evt);
            }
        });
        episodeSeriesTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                episodeSeriesTFKeyTyped(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(241, 241, 242));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Episode Title");
        jLabel26.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        epTitleTF.setBackground(new java.awt.Color(241, 241, 242));
        epTitleTF.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        epTitleTF.setForeground(new java.awt.Color(25, 149, 173));
        epTitleTF.setToolTipText("Provide  episode title");
        epTitleTF.setCaretColor(new java.awt.Color(25, 149, 173));
        epTitleTF.setSelectedTextColor(new java.awt.Color(241, 241, 242));
        epTitleTF.setSelectionColor(new java.awt.Color(25, 149, 173));
        epTitleTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                epTitleTFActionPerformed(evt);
            }
        });
        epTitleTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                epTitleTFKeyTyped(evt);
            }
        });

        purchaseSeriesButton.setBackground(new java.awt.Color(241, 241, 242));
        purchaseSeriesButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        purchaseSeriesButton.setForeground(new java.awt.Color(25, 149, 173));
        purchaseSeriesButton.setText("Purchase");
        purchaseSeriesButton.setToolTipText("Click here to confirm purchase");
        purchaseSeriesButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        purchaseSeriesButton.setBorderPainted(false);
        purchaseSeriesButton.setContentAreaFilled(false);
        purchaseSeriesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        purchaseSeriesButton.setSize(new java.awt.Dimension(97, 29));
        purchaseSeriesButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                purchaseSeriesButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                purchaseSeriesButtonFocusLost(evt);
            }
        });
        purchaseSeriesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                purchaseSeriesButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                purchaseSeriesButtonMouseEntered(evt);
            }
        });
        purchaseSeriesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseSeriesButtonActionPerformed(evt);
            }
        });

        cancelSeriesButton.setBackground(new java.awt.Color(241, 241, 242));
        cancelSeriesButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 20)); // NOI18N
        cancelSeriesButton.setForeground(new java.awt.Color(25, 149, 173));
        cancelSeriesButton.setText("Cancel");
        cancelSeriesButton.setToolTipText("Click here to cancel purchase");
        cancelSeriesButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        cancelSeriesButton.setBorderPainted(false);
        cancelSeriesButton.setContentAreaFilled(false);
        cancelSeriesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelSeriesButton.setSize(new java.awt.Dimension(97, 29));
        cancelSeriesButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cancelSeriesButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cancelSeriesButtonFocusLost(evt);
            }
        });
        cancelSeriesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelSeriesButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelSeriesButtonMouseEntered(evt);
            }
        });
        cancelSeriesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelSeriesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout seriesPanelLayout = new javax.swing.GroupLayout(seriesPanel);
        seriesPanel.setLayout(seriesPanelLayout);
        seriesPanelLayout.setHorizontalGroup(
            seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seriesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(seriesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(titleSeriesTF)
                            .addComponent(durationSeriesTF)))
                    .addGroup(seriesPanelLayout.createSequentialGroup()
                        .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(episodeSeriesTF)
                            .addComponent(epTitleTF, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(seriesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(37, 37, 37)
                        .addComponent(ageSeriesTF))
                    .addGroup(seriesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(seriesPanelLayout.createSequentialGroup()
                        .addComponent(purchaseSeriesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 357, Short.MAX_VALUE)
                        .addComponent(cancelSeriesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        seriesPanelLayout.setVerticalGroup(
            seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seriesPanelLayout.createSequentialGroup()
                .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleSeriesTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(durationSeriesTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageSeriesTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(episodeSeriesTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(epTitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(seriesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(purchaseSeriesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seriesPanelLayout.createSequentialGroup()
                        .addComponent(cancelSeriesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout seriesDialogLayout = new javax.swing.GroupLayout(seriesDialog.getContentPane());
        seriesDialog.getContentPane().setLayout(seriesDialogLayout);
        seriesDialogLayout.setHorizontalGroup(
            seriesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(seriesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(seriesDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(seriesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        seriesDialogLayout.setVerticalGroup(
            seriesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(seriesDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(seriesDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(seriesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        seriesDialog.getAccessibleContext().setAccessibleName("Purchase Music");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Media Playlist");
        setBackground(new java.awt.Color(161, 214, 226));
        setName("Media Playlist"); // NOI18N
        setPreferredSize(Toolkit.getDefaultToolkit().getScreenSize());
        setResizable(false);

        userPanel.setBackground(new java.awt.Color(161, 214, 226));

        userNameLabel.setText("Hi, " + user.getUsername());
        userNameLabel.setBackground(new java.awt.Color(241, 241, 242));
        userNameLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 36)); // NOI18N
        userNameLabel.setForeground(new java.awt.Color(241, 241, 242));
        userNameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        walletLabel.setText("Balance: Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        walletLabel.setHorizontalAlignment(SwingConstants.RIGHT);
        walletLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 30)); // NOI18N
        walletLabel.setForeground(new java.awt.Color(241, 241, 242));
        walletLabel.setToolTipText("Your wallet balance");
        walletLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout userPanelLayout = new javax.swing.GroupLayout(userPanel);
        userPanel.setLayout(userPanelLayout);
        userPanelLayout.setHorizontalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(walletLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                .addContainerGap())
        );
        userPanelLayout.setVerticalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(walletLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
            .addComponent(userNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        suggestedPanel.setBackground(new java.awt.Color(161, 214, 226));

        suggestedLabel.setBackground(new java.awt.Color(161, 214, 226));
        suggestedLabel.setFont(new java.awt.Font("Shree Devanagari 714", 1, 27)); // NOI18N
        suggestedLabel.setForeground(new java.awt.Color(241, 241, 242));
        suggestedLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        int index = (int)(Math.random() * (freebies.getNumItems() - 1));
        String sugg = freebies.getItems().get(index).toString();
        suggestedLabel.setText("<html>We suggest you: " + sugg + "</html>");
        //System.out.println("<html>We suggest you: " + sugg + "</html>");
        suggestedLabel.setToolTipText("");
        suggestedLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        suggestedLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout suggestedPanelLayout = new javax.swing.GroupLayout(suggestedPanel);
        suggestedPanel.setLayout(suggestedPanelLayout);
        suggestedPanelLayout.setHorizontalGroup(
            suggestedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suggestedPanelLayout.createSequentialGroup()
                .addComponent(suggestedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        suggestedPanelLayout.setVerticalGroup(
            suggestedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(suggestedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
        );

        currentlyPlayingPanel.setBackground(new java.awt.Color(161, 214, 226));

        photoLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 30)); // NOI18N
        photoLabel.setForeground(new java.awt.Color(241, 241, 242));
        photoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/choose-image-icon.png"))); // NOI18N
        photoLabel.setToolTipText("Cover Photo");
        photoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        photoLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        photoButton.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.disabledBackground"));
        photoButton.setFont(new java.awt.Font("Shree Devanagari 714", 1, 30)); // NOI18N
        photoButton.setForeground(new java.awt.Color(241, 241, 242));
        photoButton.setText("Choose a Photo");
        photoButton.setToolTipText("Click here to choose a cover photo");
        photoButton.setBorder(null);
        photoButton.setBorderPainted(false);
        photoButton.setContentAreaFilled(false);
        photoButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                photoButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                photoButtonFocusLost(evt);
            }
        });
        photoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                photoButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                photoButtonMouseEntered(evt);
            }
        });
        photoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoButtonActionPerformed(evt);
            }
        });

        shuffleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/shuffle-icon-overcast.png"))); // NOI18N
        shuffleButton.setToolTipText("Shuffle");
        shuffleButton.setBorderPainted(false);
        shuffleButton.setContentAreaFilled(false);
        shuffleButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                shuffleButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                shuffleButtonFocusLost(evt);
            }
        });
        shuffleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                shuffleButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                shuffleButtonMouseEntered(evt);
            }
        });
        shuffleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shuffleButtonActionPerformed(evt);
            }
        });

        moveDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-down-icon-overcast.png"))); // NOI18N
        moveDownButton.setToolTipText("Move media item down the list");
        moveDownButton.setBorderPainted(false);
        moveDownButton.setContentAreaFilled(false);
        moveDownButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                moveDownButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                moveDownButtonFocusLost(evt);
            }
        });
        moveDownButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                moveDownButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                moveDownButtonMouseEntered(evt);
            }
        });
        moveDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveDownButtonActionPerformed(evt);
            }
        });

        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/next-icon-overcast.png"))); // NOI18N
        nextButton.setToolTipText("Choose next media item in the list");
        nextButton.setBorderPainted(false);
        nextButton.setContentAreaFilled(false);
        nextButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nextButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nextButtonFocusLost(evt);
            }
        });
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextButtonMouseEntered(evt);
            }
        });
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        moveUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-up-icon-overcast.png"))); // NOI18N
        moveUpButton.setToolTipText("Move media item up the list");
        moveUpButton.setBorderPainted(false);
        moveUpButton.setContentAreaFilled(false);
        moveUpButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                moveUpButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                moveUpButtonFocusLost(evt);
            }
        });
        moveUpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                moveUpButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                moveUpButtonMouseEntered(evt);
            }
        });
        moveUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveUpButtonActionPerformed(evt);
            }
        });

        previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/previous-icon-overcast.png"))); // NOI18N
        previousButton.setToolTipText("Choose previous media item in the list");
        previousButton.setBorderPainted(false);
        previousButton.setContentAreaFilled(false);
        previousButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                previousButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                previousButtonFocusLost(evt);
            }
        });
        previousButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                previousButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                previousButtonMouseEntered(evt);
            }
        });
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete-icon-overcast.png"))); // NOI18N
        deleteButton.setToolTipText("Delete the chosen media item from the list");
        deleteButton.setBorderPainted(false);
        deleteButton.setContentAreaFilled(false);
        deleteButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deleteButtonFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                deleteButtonFocusLost(evt);
            }
        });
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteButtonMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteButtonMouseEntered(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout currentlyPlayingPanelLayout = new javax.swing.GroupLayout(currentlyPlayingPanel);
        currentlyPlayingPanel.setLayout(currentlyPlayingPanelLayout);
        currentlyPlayingPanelLayout.setHorizontalGroup(
            currentlyPlayingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentlyPlayingPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(currentlyPlayingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(photoLabel)
                    .addComponent(photoButton)
                    .addComponent(moveDownButton)
                    .addComponent(moveUpButton)
                    .addGroup(currentlyPlayingPanelLayout.createSequentialGroup()
                        .addComponent(previousButton)
                        .addGap(6, 6, 6)
                        .addComponent(shuffleButton)
                        .addGap(5, 5, 5)
                        .addComponent(nextButton))
                    .addComponent(deleteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        currentlyPlayingPanelLayout.setVerticalGroup(
            currentlyPlayingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(currentlyPlayingPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(photoButton)
                .addGap(18, 18, 18)
                .addComponent(moveUpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(currentlyPlayingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shuffleButton)
                    .addComponent(previousButton)
                    .addComponent(nextButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moveDownButton)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addGap(84, 84, 84))
        );

        photoLabel.getAccessibleContext().setAccessibleName("photoLabel");

        playingListPanel.setBackground(new java.awt.Color(161, 214, 226));

        playListNameLabel.setText(user.getUsername() + "'s Playlist");
        playListNameLabel.setBackground(new java.awt.Color(161, 214, 226));
        playListNameLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 36)); // NOI18N
        playListNameLabel.setForeground(new java.awt.Color(241, 241, 242));
        playListNameLabel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        File playingFile = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/mediadata.txt");
        playing.readFromFile(playingFile);
        DefaultListModel playingModel = new DefaultListModel();
        for (Media item : playing.getItems()) {
            playingModel.addElement(item.toString());
        }
        playlistList = new JList(playingModel);
        //System.out.println(playlistList.getModel().getSize());
        playlistList.setBackground(new java.awt.Color(161, 214, 226));
        playlistList.setFont(new java.awt.Font("Shree Devanagari 714", 1, 18)); // NOI18N
        playlistList.setForeground(new java.awt.Color(241, 241, 242));
        playlistList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        playlistList.setSelectedIndex(0);
        playlistList.setSelectionBackground(new java.awt.Color(25, 149, 173));
        jScrollPane1.setViewportView(playlistList);
        playlistList.getAccessibleContext().setAccessibleName("");

        int h = playing.getTotalDuration()/3600;
        int temp = playing.getTotalDuration() - h*3600;
        int m = temp/60;
        int s = playing.getTotalDuration()%60;
        runtimeLabel.setText("Total Runtime: " + h + ":" + m + ":" + s );
        runtimeLabel.setBackground(new java.awt.Color(161, 214, 226));
        runtimeLabel.setFont(new java.awt.Font("Shree Devanagari 714", 0, 25)); // NOI18N
        runtimeLabel.setForeground(new java.awt.Color(241, 241, 242));
        runtimeLabel.setToolTipText("Total runtime of the playlist in [H:M:S]");

        javax.swing.GroupLayout playingListPanelLayout = new javax.swing.GroupLayout(playingListPanel);
        playingListPanel.setLayout(playingListPanelLayout);
        playingListPanelLayout.setHorizontalGroup(
            playingListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, playingListPanelLayout.createSequentialGroup()
                .addComponent(playListNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(runtimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        playingListPanelLayout.setVerticalGroup(
            playingListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playingListPanelLayout.createSequentialGroup()
                .addComponent(playListNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(runtimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        playListNameLabel.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(currentlyPlayingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(suggestedPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                        .addComponent(playingListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 644, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(playingListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(suggestedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(currentlyPlayingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        suggestedPanel.getAccessibleContext().setAccessibleName("suggestedPanel");
        currentlyPlayingPanel.getAccessibleContext().setAccessibleName("currentlyPlayingPanel");
        playingListPanel.getAccessibleContext().setAccessibleName("playingListPanel");

        menuBar.setBackground(new java.awt.Color(25, 149, 173));

        profileMenu.setBackground(new java.awt.Color(241, 241, 242));
        profileMenu.setForeground(new java.awt.Color(25, 149, 173));
        profileMenu.setText("Profile");
        profileMenu.setBorderPainted(true);
        profileMenu.setContentAreaFilled(false);

        topUpMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        topUpMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        topUpMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        topUpMenuItem.setText("Top up wallet");
        topUpMenuItem.setToolTipText("Click here to top up your wallet");
        topUpMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        topUpMenuItem.setBorderPainted(false);
        topUpMenuItem.setContentAreaFilled(false);
        topUpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topUpMenuItemActionPerformed(evt);
            }
        });
        profileMenu.add(topUpMenuItem);
        topUpMenuItem.getAccessibleContext().setAccessibleName("topUpMenuItem");

        withdrawMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        withdrawMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        withdrawMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        withdrawMenuItem.setText("Withdraw from wallet");
        withdrawMenuItem.setToolTipText("Click here to withdraw money from your wallet");
        withdrawMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        withdrawMenuItem.setBorderPainted(false);
        withdrawMenuItem.setContentAreaFilled(false);
        withdrawMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawMenuItemActionPerformed(evt);
            }
        });
        profileMenu.add(withdrawMenuItem);

        changeNameMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        changeNameMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        changeNameMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        changeNameMenuItem.setText("Change Username");
        changeNameMenuItem.setToolTipText("Click here to change your user name");
        changeNameMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        changeNameMenuItem.setBorderPainted(false);
        changeNameMenuItem.setContentAreaFilled(false);
        changeNameMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeNameMenuItemActionPerformed(evt);
            }
        });
        profileMenu.add(changeNameMenuItem);

        logOutMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        logOutMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        logOutMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        logOutMenuItem.setText("Log out");
        logOutMenuItem.setToolTipText("Click here to log out of your account");
        logOutMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        logOutMenuItem.setBorderPainted(false);
        logOutMenuItem.setContentAreaFilled(false);
        logOutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutMenuItemActionPerformed(evt);
            }
        });
        profileMenu.add(logOutMenuItem);
        logOutMenuItem.getAccessibleContext().setAccessibleName("logOutMenuItem");

        menuBar.add(profileMenu);
        profileMenu.getAccessibleContext().setAccessibleName("profileMenu");

        playlistMenu.setBackground(new java.awt.Color(241, 241, 242));
        playlistMenu.setForeground(new java.awt.Color(25, 149, 173));
        playlistMenu.setText("Playlist");
        playlistMenu.setBorderPainted(true);
        playlistMenu.setContentAreaFilled(false);

        addMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        addMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        addMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        addMenuItem.setText("Add Media");
        addMenuItem.setToolTipText("click here to add media items to your currently playing playlist");
        addMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        addMenuItem.setBorderPainted(false);
        addMenuItem.setContentAreaFilled(false);
        addMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMenuItemActionPerformed(evt);
            }
        });
        playlistMenu.add(addMenuItem);
        addMenuItem.getAccessibleContext().setAccessibleName("addMenuItem");

        saveMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        saveMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        saveMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        saveMenuItem.setText("Save Playlist");
        saveMenuItem.setToolTipText("Click here to save your currently playing playlist");
        saveMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        saveMenuItem.setBorderPainted(false);
        saveMenuItem.setContentAreaFilled(false);
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        playlistMenu.add(saveMenuItem);
        saveMenuItem.getAccessibleContext().setAccessibleName("saveMenuItem");

        loadMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        loadMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        loadMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        loadMenuItem.setText("Load Playlist");
        loadMenuItem.setToolTipText("Click here to load a playlist to play");
        loadMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        loadMenuItem.setBorderPainted(false);
        loadMenuItem.setContentAreaFilled(false);
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemActionPerformed(evt);
            }
        });
        playlistMenu.add(loadMenuItem);
        loadMenuItem.getAccessibleContext().setAccessibleName("loadMenuItem");

        menuBar.add(playlistMenu);
        playlistMenu.getAccessibleContext().setAccessibleName("playlistMenu");

        myMediaMenu.setBackground(new java.awt.Color(241, 241, 242));
        myMediaMenu.setForeground(new java.awt.Color(25, 149, 173));
        myMediaMenu.setText("My Media");
        myMediaMenu.setToolTipText("");
        myMediaMenu.setBorderPainted(true);
        myMediaMenu.setContentAreaFilled(false);

        sortMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        sortMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        sortMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        sortMenuItem.setText("Sort Media");
        sortMenuItem.setToolTipText("Click here to sort the media items you own");
        sortMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        sortMenuItem.setBorderPainted(false);
        sortMenuItem.setContentAreaFilled(false);
        sortMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortMenuItemActionPerformed(evt);
            }
        });
        myMediaMenu.add(sortMenuItem);
        sortMenuItem.getAccessibleContext().setAccessibleName("sortMenuItem");

        purchaseMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        purchaseMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        purchaseMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        purchaseMenuItem.setText("Purchase Media");
        purchaseMenuItem.setToolTipText("Click here to purchase new media items");
        purchaseMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        purchaseMenuItem.setBorderPainted(false);
        purchaseMenuItem.setContentAreaFilled(false);
        purchaseMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseMenuItemActionPerformed(evt);
            }
        });
        myMediaMenu.add(purchaseMenuItem);
        purchaseMenuItem.getAccessibleContext().setAccessibleName("purchaseMenuItem");

        browseMediaMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        browseMediaMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        browseMediaMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        browseMediaMenuItem.setText("Browse Media");
        browseMediaMenuItem.setToolTipText("Click here to access a list of all the media you own");
        browseMediaMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        browseMediaMenuItem.setBorderPainted(false);
        browseMediaMenuItem.setContentAreaFilled(false);
        browseMediaMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseMediaMenuItemActionPerformed(evt);
            }
        });
        myMediaMenu.add(browseMediaMenuItem);
        browseMediaMenuItem.getAccessibleContext().setAccessibleName("browseMenuItem");

        menuBar.add(myMediaMenu);
        myMediaMenu.getAccessibleContext().setAccessibleName("mediaMenu");

        freebiesMenu.setBackground(new java.awt.Color(241, 241, 242));
        freebiesMenu.setForeground(new java.awt.Color(25, 149, 173));
        freebiesMenu.setText("Freebies");
        freebiesMenu.setToolTipText("Click here to access a list with available freebies");
        freebiesMenu.setBorderPainted(true);
        freebiesMenu.setContentAreaFilled(false);

        freebiesMenuItem.setBackground(new java.awt.Color(241, 241, 242));
        freebiesMenuItem.setFont(new java.awt.Font("Shree Devanagari 714", 0, 15)); // NOI18N
        freebiesMenuItem.setForeground(new java.awt.Color(25, 149, 173));
        freebiesMenuItem.setText("Browse Freebies");
        freebiesMenuItem.setToolTipText("Click here to access a list of the free media we offer");
        freebiesMenuItem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 149, 173), 1, true));
        freebiesMenuItem.setBorderPainted(false);
        freebiesMenuItem.setContentAreaFilled(false);
        freebiesMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freebiesMenuItemActionPerformed(evt);
            }
        });
        freebiesMenu.add(freebiesMenuItem);

        menuBar.add(freebiesMenu);
        freebiesMenu.getAccessibleContext().setAccessibleName("freebiesMenu");

        exitMenu.setBackground(new java.awt.Color(241, 241, 242));
        exitMenu.setForeground(new java.awt.Color(25, 149, 173));
        exitMenu.setText("Exit");
        exitMenu.setToolTipText("Click here to exit Media Playlist");
        exitMenu.setBorderPainted(true);
        exitMenu.setContentAreaFilled(false);
        exitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                exitMenuMousePressed(evt);
            }
        });
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        menuBar.add(exitMenu);
        exitMenu.getAccessibleContext().setAccessibleName("exitMenu");

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(userPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(userPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutMenuItemActionPerformed
        // TODO add your handling code here:
        StartScreen ss = new StartScreen();
        ss.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logOutMenuItemActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "Are you sure you wish to exit Media Playlist", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
            System.exit(0);
        }
        
    }//GEN-LAST:event_exitMenuActionPerformed

    private void exitMenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMenuMousePressed
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(null, "Are you sure you wish to exit Media Playlist", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuMousePressed

    private void photoButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_photoButtonFocusGained
        // TODO add your handling code here:
        photoButton.setForeground(new java.awt.Color(186,188,190));
    }//GEN-LAST:event_photoButtonFocusGained

    private void photoButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_photoButtonFocusLost
        // TODO add your handling code here:
        photoButton.setForeground(new java.awt.Color(241,241,242));
    }//GEN-LAST:event_photoButtonFocusLost

    private void photoButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoButtonMouseEntered
        // TODO add your handling code here:
        photoButton.setForeground(new java.awt.Color(186,188,190));
    }//GEN-LAST:event_photoButtonMouseEntered

    private void photoButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoButtonMouseExited
        // TODO add your handling code here:
        photoButton.setForeground(new java.awt.Color(241,241,242));
    }//GEN-LAST:event_photoButtonMouseExited

    private void topUpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpMenuItemActionPerformed
        // TODO add your handling code here:
        //TopUpDialog topUp = new TopUpDialog(this, true, user);
        //topUp.setVisible(true);
        walletDialog.setVisible(true);
        topUpPanel.setVisible(true);
    }//GEN-LAST:event_topUpMenuItemActionPerformed

    private void topUpButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_topUpButtonFocusGained
        // TODO add your handling code here:
        topUpButton.setBorderPainted(true);
    }//GEN-LAST:event_topUpButtonFocusGained

    private void topUpButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_topUpButtonFocusLost
        // TODO add your handling code here:
        topUpButton.setBorderPainted(false);
    }//GEN-LAST:event_topUpButtonFocusLost

    private void topUpButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topUpButtonMouseExited
        // TODO add your handling code here:
        topUpButton.setBorderPainted(false);
    }//GEN-LAST:event_topUpButtonMouseExited

    private void topUpButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topUpButtonMouseEntered
        // TODO add your handling code here:
        topUpButton.setBorderPainted(true);
    }//GEN-LAST:event_topUpButtonMouseEntered

    private void topUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpButtonActionPerformed
        // TODO add your handling code here:
        double amount = Double.parseDouble(topUpAmountTextField.getText());
        //System.out.println(amount);
        user.topUp((int)(amount*100));
        if(!(User.updateDatabase(user, user.getUsername()))) {
            JOptionPane.showMessageDialog(null, "Oops! The changes you have made were not saved in our database", "Database not updated" ,JOptionPane.ERROR_MESSAGE);
        }
        walletLabel.setText("Balance: Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        topUpAmountTextField.setText("0.00");
        topUpPanel.setVisible(false);
        walletDialog.dispose();
    }//GEN-LAST:event_topUpButtonActionPerformed

    private void cancelButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelButtonFocusGained
        // TODO add your handling code here:
        cancelButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelButtonFocusGained

    private void cancelButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelButtonFocusLost
        // TODO add your handling code here:
        cancelButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelButtonFocusLost

    private void cancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseExited
        // TODO add your handling code here:
        cancelButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelButtonMouseExited

    private void cancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseEntered
        // TODO add your handling code here:
        cancelButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelButtonMouseEntered

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        topUpAmountTextField.setText("0.00");
        topUpPanel.setVisible(false);
        walletDialog.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void topUpAmountTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_topUpAmountTextFieldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_PERIOD)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_topUpAmountTextFieldKeyTyped

    private void withdrawButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_withdrawButtonFocusGained
        // TODO add your handling code here:
        withdrawButton.setBorderPainted(true);
    }//GEN-LAST:event_withdrawButtonFocusGained

    private void withdrawButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_withdrawButtonFocusLost
        // TODO add your handling code here:
        withdrawButton.setBorderPainted(false);
    }//GEN-LAST:event_withdrawButtonFocusLost

    private void withdrawButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_withdrawButtonMouseExited
        // TODO add your handling code here:
        withdrawButton.setBorderPainted(false);
    }//GEN-LAST:event_withdrawButtonMouseExited

    private void withdrawButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_withdrawButtonMouseEntered
        // TODO add your handling code here:
        withdrawButton.setBorderPainted(true);
    }//GEN-LAST:event_withdrawButtonMouseEntered

    private void withdrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawButtonActionPerformed
        // TODO add your handling code here:
        double amount = Double.parseDouble(withdrawalAmountTextField.getText());
        //System.out.println(amount);
        user.topUp(-(int)(amount*100));
        if(!(User.updateDatabase(user, user.getUsername()))) {
            JOptionPane.showMessageDialog(null, "Oops! The changes you have made were not saved in our database", "Database not updated" ,JOptionPane.ERROR_MESSAGE);
        }
        walletLabel.setText("Balance: Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        withdrawalAmountTextField.setText("0.00");
        withdrawPanel.setVisible(false);
        walletDialog.dispose();
    }//GEN-LAST:event_withdrawButtonActionPerformed

    private void cancelWithdrawalButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelWithdrawalButtonFocusGained
        // TODO add your handling code here:
        cancelWithdrawalButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelWithdrawalButtonFocusGained

    private void cancelWithdrawalButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelWithdrawalButtonFocusLost
        // TODO add your handling code here:
        cancelWithdrawalButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelWithdrawalButtonFocusLost

    private void cancelWithdrawalButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelWithdrawalButtonMouseExited
        // TODO add your handling code here:
        cancelWithdrawalButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelWithdrawalButtonMouseExited

    private void cancelWithdrawalButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelWithdrawalButtonMouseEntered
        // TODO add your handling code here:
        cancelWithdrawalButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelWithdrawalButtonMouseEntered

    private void cancelWithdrawalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelWithdrawalButtonActionPerformed
        // TODO add your handling code here:
        withdrawalAmountTextField.setText("0.00");
        withdrawPanel.setVisible(false);
        walletDialog.dispose();
    }//GEN-LAST:event_cancelWithdrawalButtonActionPerformed

    private void withdrawalAmountTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_withdrawalAmountTextFieldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_PERIOD)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_withdrawalAmountTextFieldKeyTyped

    private void withdrawMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawMenuItemActionPerformed
        // TODO add your handling code here:
        walletDialog.setVisible(true);
        withdrawPanel.setVisible(true);
    }//GEN-LAST:event_withdrawMenuItemActionPerformed

    private void topUpAmountTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topUpAmountTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topUpAmountTextFieldActionPerformed

    private void shuffleButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shuffleButtonFocusLost
        // TODO add your handling code here:
        shuffleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/shuffle-icon-overcast.png")));

    }//GEN-LAST:event_shuffleButtonFocusLost

    private void shuffleButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shuffleButtonMouseExited
        // TODO add your handling code here:
        shuffleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/shuffle-icon-overcast.png"))); // NOI18N

    }//GEN-LAST:event_shuffleButtonMouseExited

    private void shuffleButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_shuffleButtonFocusGained
        // TODO add your handling code here:
        shuffleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/shuffle-icon-grey.png"))); // NOI18N

    }//GEN-LAST:event_shuffleButtonFocusGained

    private void shuffleButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shuffleButtonMouseEntered
        // TODO add your handling code here:
        shuffleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/shuffle-icon-grey.png"))); // NOI18N

    }//GEN-LAST:event_shuffleButtonMouseEntered

    private void moveUpButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moveUpButtonFocusGained
        // TODO add your handling code here:
        moveUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-up-icon-grey.png"))); // NOI18N

    }//GEN-LAST:event_moveUpButtonFocusGained

    private void moveUpButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveUpButtonMouseEntered
        // TODO add your handling code here:
        moveUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-up-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_moveUpButtonMouseEntered

    private void moveUpButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moveUpButtonFocusLost
        // TODO add your handling code here:
        moveUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-up-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_moveUpButtonFocusLost

    private void moveUpButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveUpButtonMouseExited
        // TODO add your handling code here:
        moveUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-up-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_moveUpButtonMouseExited

    private void moveDownButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moveDownButtonFocusGained
        // TODO add your handling code here:
        moveDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-down-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_moveDownButtonFocusGained

    private void moveDownButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveDownButtonMouseEntered
        // TODO add your handling code here:
        moveDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-down-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_moveDownButtonMouseEntered

    private void moveDownButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_moveDownButtonFocusLost
        // TODO add your handling code here:
        moveDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-down-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_moveDownButtonFocusLost

    private void moveDownButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moveDownButtonMouseExited
        // TODO add your handling code here:
        moveDownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/move-down-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_moveDownButtonMouseExited

    private void nextButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nextButtonFocusGained
        // TODO add your handling code here:
        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/next-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_nextButtonFocusGained

    private void nextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseEntered
        // TODO add your handling code here:
        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/next-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_nextButtonMouseEntered

    private void nextButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nextButtonFocusLost
        // TODO add your handling code here:
        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/next-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_nextButtonFocusLost

    private void nextButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseExited
        // TODO add your handling code here:
        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/next-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_nextButtonMouseExited

    private void previousButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_previousButtonFocusGained
        // TODO add your handling code here:
        previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/previous-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_previousButtonFocusGained

    private void previousButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseEntered
        // TODO add your handling code here:
        previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/previous-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_previousButtonMouseEntered

    private void previousButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_previousButtonFocusLost
        // TODO add your handling code here:
        previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/previous-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_previousButtonFocusLost

    private void previousButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousButtonMouseExited
        // TODO add your handling code here:
        previousButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/previous-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_previousButtonMouseExited

    private void deleteButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deleteButtonFocusGained
        // TODO add your handling code here:
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_deleteButtonFocusGained

    private void deleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseEntered
        // TODO add your handling code here:
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete-icon-grey.png"))); // NOI18N
    }//GEN-LAST:event_deleteButtonMouseEntered

    private void deleteButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deleteButtonFocusLost
        // TODO add your handling code here:
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_deleteButtonFocusLost

    private void deleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseExited
        // TODO add your handling code here:
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/delete-icon-overcast.png"))); // NOI18N
    }//GEN-LAST:event_deleteButtonMouseExited

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
        File saveList;
        JFileChooser fileChooser = new JFileChooser();
	fileChooser.setDialogTitle("Save Playlist");
	int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            saveList = fileChooser.getSelectedFile();
            playing.saveToFile(saveList);
	}
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void loadMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemActionPerformed
        // TODO add your handling code here:
        File openList;
        JFileChooser fileChooser = new JFileChooser();
	fileChooser.setDialogTitle("Load Playlist");
	int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            openList = fileChooser.getSelectedFile();
            playing = new PlayList(user);
            playing.readFromFile(openList);
	}
        
        DefaultListModel lM = new DefaultListModel();
        for (Media item : playing.getItems()) {
            lM.addElement(item.toString());
        }
        /*for (int i = 0; i < lM.getSize(); i++) {
            System.out.println(lM.getElementAt(i));
        }*/
        playlistList.setModel(lM);
        int h = playing.getTotalDuration()/3600;
        int temp = playing.getTotalDuration() - h*3600;
        int m = temp/60;
        int s = playing.getTotalDuration()%60;
        runtimeLabel.setText("Total Runtime: " + h + ":" + m + ":" + s );
        playlistList.setSelectedIndex(0);
    }//GEN-LAST:event_loadMenuItemActionPerformed

    private void shuffleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shuffleButtonActionPerformed
        // TODO add your handling code here:
        Collections.shuffle(playing.getItems());
        DefaultListModel lM = new DefaultListModel();
        for (Media item : playing.getItems()) {
            lM.addElement(item.toString());
        }
        playlistList.setModel(lM);
        playlistList.setSelectedIndex(0);
    }//GEN-LAST:event_shuffleButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        DefaultListModel lM = (DefaultListModel) playlistList.getModel();
        int index = playlistList.getSelectedIndex();
        if (index != -1 && playlistList.getModel().getSize() > 0) {
            lM.remove(index);
            playlistList.setModel(lM);
            playing.removeMedia(index);
            int h = playing.getTotalDuration()/3600;
            int temp = playing.getTotalDuration() - h*3600;
            int m = temp/60;
            int s = playing.getTotalDuration()%60;
            runtimeLabel.setText("Total Runtime: " + h + ":" + m + ":" + s );
            if(index == playlistList.getModel().getSize()) {
                playlistList.setSelectedIndex(index - 1);
            }
            else {
                playlistList.setSelectedIndex(index);
            }
        }
        else {
            getToolkit().beep();
        }
        
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
        if(playlistList.getSelectedIndex() < playlistList.getModel().getSize() - 1) {
            playlistList.setSelectedIndex(playlistList.getSelectedIndex() + 1);
        }
        else {
            getToolkit().beep();
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        // TODO add your handling code here:
        if(playlistList.getSelectedIndex() > 0) {
            playlistList.setSelectedIndex(playlistList.getSelectedIndex() - 1);
        }
        else {
            getToolkit().beep();
        }
        
    }//GEN-LAST:event_previousButtonActionPerformed

    private void moveUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveUpButtonActionPerformed
        // TODO add your handling code here:
        int index = playlistList.getSelectedIndex();
        if(playing.moveMedia(index, index - 1)) {
            DefaultListModel lM = new DefaultListModel();
            for (Media item : playing.getItems()) {
            lM.addElement(item.toString());
            }
            playlistList.setModel(lM);
            playlistList.setSelectedIndex(index - 1);
        }
        else {
            getToolkit().beep();
        }
    }//GEN-LAST:event_moveUpButtonActionPerformed

    private void moveDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveDownButtonActionPerformed
        // TODO add your handling code here:
        int index = playlistList.getSelectedIndex();
        if(playing.moveMedia(index, index + 1)) {
            DefaultListModel lM = new DefaultListModel();
            for (Media item : playing.getItems()) {
            lM.addElement(item.toString());
            }
            playlistList.setModel(lM);
            playlistList.setSelectedIndex(index + 1);
        }
        else {
            getToolkit().beep();
        }
    }//GEN-LAST:event_moveDownButtonActionPerformed

    private void photoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoButtonActionPerformed
        // TODO add your handling code here:
        File choosePic;
        JFileChooser fileChooser = new JFileChooser();
	fileChooser.setDialogTitle("Choose a Cover Picture");
	int pic = fileChooser.showOpenDialog(this);
        if (pic == JFileChooser.APPROVE_OPTION) {
            choosePic = fileChooser.getSelectedFile();
            photoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(choosePic.getAbsolutePath()))); // NOI18N
            int index = playlistList.getSelectedIndex();
            playing.getItems().get(index).setImageFileName(choosePic.getAbsolutePath());
	}
        
    }//GEN-LAST:event_photoButtonActionPerformed

    private void cancelFreebiesButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelFreebiesButtonFocusGained
        // TODO add your handling code here:
        cancelFreebiesButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelFreebiesButtonFocusGained

    private void cancelFreebiesButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelFreebiesButtonFocusLost
        // TODO add your handling code here:
        cancelFreebiesButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelFreebiesButtonFocusLost

    private void cancelFreebiesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelFreebiesButtonMouseExited
        // TODO add your handling code here:
        cancelFreebiesButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelFreebiesButtonMouseExited

    private void cancelFreebiesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelFreebiesButtonMouseEntered
        // TODO add your handling code here:
        cancelFreebiesButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelFreebiesButtonMouseEntered

    private void cancelFreebiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelFreebiesButtonActionPerformed
        // TODO add your handling code here:
        freebiesList.setSelectedIndex(0);
        freebiesFrame.setVisible(false);
        freebiesFrame.dispose();
        
    }//GEN-LAST:event_cancelFreebiesButtonActionPerformed

    private void addButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addButtonFocusGained
        // TODO add your handling code here:
        addButton.setBorderPainted(true);
    }//GEN-LAST:event_addButtonFocusGained

    private void addButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addButtonFocusLost
        // TODO add your handling code here:
        addButton.setBorderPainted(false);
    }//GEN-LAST:event_addButtonFocusLost

    private void addButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseExited
        // TODO add your handling code here:
        addButton.setBorderPainted(false);
    }//GEN-LAST:event_addButtonMouseExited

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseEntered
        // TODO add your handling code here:
        addButton.setBorderPainted(true);
    }//GEN-LAST:event_addButtonMouseEntered

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        Media item = freebies.getMedia(freebiesList.getSelectedIndex());
        for (Media m : myMedia.getItems()) {
            if(item.compareTo(m) == 0) {
                JOptionPane.showMessageDialog(null, "Ooops!This media item is already in your media.", "Item already in your Media list" ,JOptionPane.ERROR_MESSAGE);
                flag = false;
                break;
            }
        }
        if(flag) {
            myMedia.addFreeMedia(item);
            File updateMedia = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/"+ user.getUsername() + ".txt");
            myMedia.saveToFile(updateMedia);
        }
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void freebiesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freebiesMenuItemActionPerformed
        // TODO add your handling code here:
        freebiesFrame.setVisible(true);
        freebiesList.setSelectedIndex(0);
    }//GEN-LAST:event_freebiesMenuItemActionPerformed

    private void addMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMenuItemActionPerformed
        // TODO add your handling code here:
        addMediaFrame.setVisible(true);
        File mediaFile = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/" + user.getUsername() + ".txt");
        myMedia = new PlayList(user);
        myMedia.readFromFile(mediaFile);
        DefaultListModel mM = new DefaultListModel();
        for (Media item : myMedia.getItems()) {
            mM.addElement(item.toString());
        }
        myMediaList.setModel(mM);
        myMediaList.setSelectedIndex(0);
    }//GEN-LAST:event_addMenuItemActionPerformed

    private void closeBrowseMediaButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_closeBrowseMediaButtonFocusGained
        // TODO add your handling code here:
        closeBrowseMediaButton.setBorderPainted(true);
    }//GEN-LAST:event_closeBrowseMediaButtonFocusGained

    private void closeBrowseMediaButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_closeBrowseMediaButtonFocusLost
        // TODO add your handling code here:
        closeBrowseMediaButton.setBorderPainted(false);
    }//GEN-LAST:event_closeBrowseMediaButtonFocusLost

    private void closeBrowseMediaButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBrowseMediaButtonMouseExited
        // TODO add your handling code here:
        closeBrowseMediaButton.setBorderPainted(false);
    }//GEN-LAST:event_closeBrowseMediaButtonMouseExited

    private void closeBrowseMediaButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeBrowseMediaButtonMouseEntered
        // TODO add your handling code here:
        closeBrowseMediaButton.setBorderPainted(true);
    }//GEN-LAST:event_closeBrowseMediaButtonMouseEntered

    private void closeBrowseMediaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBrowseMediaButtonActionPerformed
        // TODO add your handling code here:
        //browseMediaList.setModel(clearModel);
        browseMediaFrame.setVisible(false);
        browseMediaFrame.dispose();
    }//GEN-LAST:event_closeBrowseMediaButtonActionPerformed

    private void closeAddMediaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAddMediaButtonActionPerformed
        // TODO add your handling code here:
        //DefaultListModel clearModel = (DefaultListModel) myMediaList.getModel();
        //clearModel.removeAllElements();
        //myMediaList.setModel(clearModel);
        addMediaFrame.setVisible(false);
        addMediaFrame.dispose();

    }//GEN-LAST:event_closeAddMediaButtonActionPerformed

    private void closeAddMediaButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeAddMediaButtonMouseEntered
        // TODO add your handling code here:
        closeAddMediaButton.setBorderPainted(true);
    }//GEN-LAST:event_closeAddMediaButtonMouseEntered

    private void closeAddMediaButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeAddMediaButtonMouseExited
        // TODO add your handling code here:
        closeAddMediaButton.setBorderPainted(false);
    }//GEN-LAST:event_closeAddMediaButtonMouseExited

    private void closeAddMediaButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_closeAddMediaButtonFocusLost
        // TODO add your handling code here:
        closeAddMediaButton.setBorderPainted(false);
    }//GEN-LAST:event_closeAddMediaButtonFocusLost

    private void closeAddMediaButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_closeAddMediaButtonFocusGained
        // TODO add your handling code here:
        closeAddMediaButton.setBorderPainted(true);
    }//GEN-LAST:event_closeAddMediaButtonFocusGained

    private void addMyMediaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMyMediaButtonActionPerformed
        // TODO add your handling code here:
        boolean flag = true;
        Media item = myMedia.getMedia(myMediaList.getSelectedIndex());
        for (Media m : playing.getItems()) {
            if(item.compareTo(m) == 0) {
                JOptionPane.showMessageDialog(null, "Ooops!This media item is already in your Current playlist.", "Item already in your Current list" ,JOptionPane.ERROR_MESSAGE);
                flag = false;
                break;
            }
        }
        if(flag) {
            playing.addFreeMedia(item);
            File updateMedia = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/"+ user.getUsername() + "-playing.txt");
            playing.saveToFile(updateMedia);
        }
        File openFile = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/"+ user.getUsername() + "-playing.txt");
        playing = new PlayList(user);
        playing.readFromFile(openFile);

        DefaultListModel pM = new DefaultListModel();
        for (Media m: playing.getItems()) {
            pM.addElement(m.toString());
        }
        playlistList.setModel(pM);
        int h = playing.getTotalDuration()/3600;
        int temp = playing.getTotalDuration() - h*3600;
        int m = temp/60;
        int s = playing.getTotalDuration()%60;
        runtimeLabel.setText("Total Runtime: " + h + ":" + m + ":" + s );
        playlistList.setSelectedIndex(0);

    }//GEN-LAST:event_addMyMediaButtonActionPerformed

    private void addMyMediaButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMyMediaButtonMouseEntered
        // TODO add your handling code here:
        addMyMediaButton.setBorderPainted(true);
    }//GEN-LAST:event_addMyMediaButtonMouseEntered

    private void addMyMediaButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMyMediaButtonMouseExited
        // TODO add your handling code here:
        addMyMediaButton.setBorderPainted(false);
    }//GEN-LAST:event_addMyMediaButtonMouseExited

    private void addMyMediaButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addMyMediaButtonFocusLost
        // TODO add your handling code here:
        addMyMediaButton.setBorderPainted(false);
    }//GEN-LAST:event_addMyMediaButtonFocusLost

    private void addMyMediaButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addMyMediaButtonFocusGained
        // TODO add your handling code here:
        addMyMediaButton.setBorderPainted(true);
    }//GEN-LAST:event_addMyMediaButtonFocusGained

    private void browseMediaMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseMediaMenuItemActionPerformed
        // TODO add your handling code here:
        browseMediaFrame.setVisible(true);
        File mediaFile = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/" + user.getUsername() + ".txt");
        myMedia = new PlayList(user);
        myMedia.readFromFile(mediaFile);
        DefaultListModel mM = new DefaultListModel();
        for (Media item : myMedia.getItems()) {
            mM.addElement(item.toString());
        }
        browseMediaList.setModel(mM);
        browseMediaList.setSelectedIndex(0);
    }//GEN-LAST:event_browseMediaMenuItemActionPerformed

    private void cancelSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSortButtonActionPerformed
        // TODO add your handling code here:
        sortDialog.setVisible(false);
        sortDialog.dispose();
    }//GEN-LAST:event_cancelSortButtonActionPerformed

    private void cancelSortButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelSortButtonMouseEntered
        // TODO add your handling code here:
        cancelSortButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelSortButtonMouseEntered

    private void cancelSortButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelSortButtonMouseExited
        // TODO add your handling code here:
        cancelSortButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelSortButtonMouseExited

    private void cancelSortButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelSortButtonFocusLost
        // TODO add your handling code here:
        cancelSortButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelSortButtonFocusLost

    private void cancelSortButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelSortButtonFocusGained
        // TODO add your handling code here:
        cancelSortButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelSortButtonFocusGained

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        // TODO add your handling code here:
        if(titleSortRB.isSelected()) {
            myMedia.sortItemsByTitle();
            System.out.println("Title");
        }
        if(costSortRB.isSelected()) {
            myMedia.sortItemsByCost();
            System.out.println("cost");
        }
        if(durationSortRB.isSelected()) {
            myMedia.sortItemsByDuration();
            System.out.println("Duration");
        }
        File updateMedia = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/"+ user.getUsername() + ".txt");
        myMedia.saveToFile(updateMedia);
        sortDialog.setVisible(false);
        sortDialog.dispose();
    }//GEN-LAST:event_sortButtonActionPerformed

    private void sortButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortButtonMouseEntered
        // TODO add your handling code here:
        sortButton.setBorderPainted(true);
    }//GEN-LAST:event_sortButtonMouseEntered

    private void sortButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortButtonMouseExited
        // TODO add your handling code here:
        sortButton.setBorderPainted(false);
    }//GEN-LAST:event_sortButtonMouseExited

    private void sortButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sortButtonFocusLost
        // TODO add your handling code here:
        sortButton.setBorderPainted(false);
    }//GEN-LAST:event_sortButtonFocusLost

    private void sortButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sortButtonFocusGained
        // TODO add your handling code here:
        sortButton.setBorderPainted(true);
    }//GEN-LAST:event_sortButtonFocusGained

    private void durationSortRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationSortRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationSortRBActionPerformed

    private void sortMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortMenuItemActionPerformed
        // TODO add your handling code here:
        sortDialog.setVisible(true);
        for (Media m : myMedia.getItems()) {
            System.out.println(m.toString());
        }
    }//GEN-LAST:event_sortMenuItemActionPerformed

    private void costSortRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costSortRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costSortRBActionPerformed

    private void cancelPurchaseButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelPurchaseButtonFocusGained
        // TODO add your handling code here:
        cancelPurchaseButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelPurchaseButtonFocusGained

    private void cancelPurchaseButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelPurchaseButtonFocusLost
        // TODO add your handling code here:
        cancelPurchaseButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelPurchaseButtonFocusLost

    private void cancelPurchaseButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPurchaseButtonMouseExited
        // TODO add your handling code here:
        cancelPurchaseButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelPurchaseButtonMouseExited

    private void cancelPurchaseButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelPurchaseButtonMouseEntered
        // TODO add your handling code here:
        cancelPurchaseButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelPurchaseButtonMouseEntered

    private void cancelPurchaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPurchaseButtonActionPerformed
        // TODO add your handling code here:
        purchaseCB.setSelectedIndex(0);
        purchaseFrame.setVisible(false);
        purchaseFrame.dispose();
    }//GEN-LAST:event_cancelPurchaseButtonActionPerformed

    private void titleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleTextFieldActionPerformed

    private void titleTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_titleTextFieldKeyTyped

    private void durationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationTextFieldActionPerformed

    private void durationTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_durationTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_durationTextFieldKeyTyped

    private void artistTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_artistTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_artistTextFieldActionPerformed

    private void artistTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_artistTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_artistTextFieldKeyTyped

    private void ageFilmTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageFilmTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFilmTFKeyTyped

    private void ageFilmTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageFilmTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFilmTFActionPerformed

    private void durationFilmTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_durationFilmTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_durationFilmTFKeyTyped

    private void durationFilmTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationFilmTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationFilmTFActionPerformed

    private void titleFilmTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleFilmTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_titleFilmTFKeyTyped

    private void titleFilmTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleFilmTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleFilmTFActionPerformed

    private void directorFilmTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directorFilmTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_directorFilmTFActionPerformed

    private void directorFilmTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_directorFilmTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_directorFilmTFKeyTyped

    private void titleSeriesTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleSeriesTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleSeriesTFActionPerformed

    private void titleSeriesTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleSeriesTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_titleSeriesTFKeyTyped

    private void durationSeriesTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationSeriesTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durationSeriesTFActionPerformed

    private void durationSeriesTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_durationSeriesTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_durationSeriesTFKeyTyped

    private void ageSeriesTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageSeriesTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageSeriesTFActionPerformed

    private void ageSeriesTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageSeriesTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ageSeriesTFKeyTyped

    private void episodeSeriesTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_episodeSeriesTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_episodeSeriesTFActionPerformed

    private void episodeSeriesTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_episodeSeriesTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_episodeSeriesTFKeyTyped

    private void epTitleTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_epTitleTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_epTitleTFActionPerformed

    private void epTitleTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_epTitleTFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_epTitleTFKeyTyped

    private void purchaseCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseCBActionPerformed
        // TODO add your handling code here:
        int index = purchaseCB.getSelectedIndex();
        switch(index) {
        case 1: musicDialog.setVisible(true); break;
        case 2: filmDialog.setVisible(true); break;
        case 3: seriesDialog.setVisible(true);break;
    }
    }//GEN-LAST:event_purchaseCBActionPerformed

    private void purchaseMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseMenuItemActionPerformed
        // TODO add your handling code here:
        purchaseFrame.setVisible(true);
    }//GEN-LAST:event_purchaseMenuItemActionPerformed

    private void purchaseMusicButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseMusicButtonFocusGained
        // TODO add your handling code here:
        purchaseMusicButton.setBorderPainted(true);
    }//GEN-LAST:event_purchaseMusicButtonFocusGained

    private void purchaseMusicButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseMusicButtonFocusLost
        // TODO add your handling code here:
        purchaseMusicButton.setBorderPainted(false);
    }//GEN-LAST:event_purchaseMusicButtonFocusLost

    private void purchaseMusicButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseMusicButtonMouseExited
        // TODO add your handling code here:
        purchaseMusicButton.setBorderPainted(false);
    }//GEN-LAST:event_purchaseMusicButtonMouseExited

    private void purchaseMusicButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseMusicButtonMouseEntered
        // TODO add your handling code here:
        purchaseMusicButton.setBorderPainted(true);
    }//GEN-LAST:event_purchaseMusicButtonMouseEntered

    private void purchaseMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseMusicButtonActionPerformed
        // TODO add your handling code here:
        String title = titleTextField.getText();
        int duration = Integer.parseInt(durationTextField.getText());
        String artist = artistTextField.getText();
        Music m = new Music(title, duration, artist);
        myMedia.addMedia(m);
        File updateMedia = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/"+ user.getUsername() + ".txt");
        myMedia.saveToFile(updateMedia);
        walletLabel.setText("Balance: Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        User.updateDatabase(user, user.getUsername());
        titleTextField.setText("");
        durationTextField.setText("");
        artistTextField.setText("");
        musicDialog.setVisible(false);
        musicDialog.dispose();
        purchaseFrame.setVisible(false);
        purchaseCB.setSelectedIndex(0);
        purchaseFrame.dispose();
    }//GEN-LAST:event_purchaseMusicButtonActionPerformed

    private void cancelMusicButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelMusicButtonFocusGained
        // TODO add your handling code here:
        cancelMusicButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelMusicButtonFocusGained

    private void cancelMusicButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelMusicButtonFocusLost
        // TODO add your handling code here:
        cancelMusicButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelMusicButtonFocusLost

    private void cancelMusicButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMusicButtonMouseExited
        // TODO add your handling code here:
        cancelMusicButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelMusicButtonMouseExited

    private void cancelMusicButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelMusicButtonMouseEntered
        // TODO add your handling code here:
        cancelMusicButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelMusicButtonMouseEntered

    private void cancelMusicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelMusicButtonActionPerformed
        // TODO add your handling code here:
        titleTextField.setText("");
        durationTextField.setText("");
        artistTextField.setText("");
        musicDialog.setVisible(false);
        musicDialog.dispose();
    }//GEN-LAST:event_cancelMusicButtonActionPerformed

    private void purchaseFilmButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseFilmButtonFocusGained
        // TODO add your handling code here:
        purchaseFilmButton.setBorderPainted(true);
    }//GEN-LAST:event_purchaseFilmButtonFocusGained

    private void purchaseFilmButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseFilmButtonFocusLost
        // TODO add your handling code here:
        purchaseFilmButton.setBorderPainted(false);
    }//GEN-LAST:event_purchaseFilmButtonFocusLost

    private void purchaseFilmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseFilmButtonMouseExited
        // TODO add your handling code here:
        purchaseFilmButton.setBorderPainted(false);
    }//GEN-LAST:event_purchaseFilmButtonMouseExited

    private void purchaseFilmButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseFilmButtonMouseEntered
        // TODO add your handling code here:
        purchaseFilmButton.setBorderPainted(true);
    }//GEN-LAST:event_purchaseFilmButtonMouseEntered

    private void purchaseFilmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseFilmButtonActionPerformed
        // TODO add your handling code here:
        String title = titleFilmTF.getText();
        int duration = Integer.parseInt(durationFilmTF.getText());
        int age = Integer.parseInt(ageFilmTF.getText());
        String director = directorFilmTF.getText();
        Film f = new Film(title, duration, age, director);
        myMedia.addMedia(f);
        File updateMedia = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/"+ user.getUsername() + ".txt");
        myMedia.saveToFile(updateMedia);
        walletLabel.setText("Balance: Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        User.updateDatabase(user, user.getUsername());
        titleFilmTF.setText("");
        durationFilmTF.setText("");
        ageFilmTF.setText("");
        directorFilmTF.setText("");
        filmDialog.setVisible(false);
        filmDialog.dispose();
        purchaseFrame.setVisible(false);
        purchaseCB.setSelectedIndex(0);
        purchaseFrame.dispose();
    }//GEN-LAST:event_purchaseFilmButtonActionPerformed

    private void cancelFilmButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelFilmButtonFocusGained
        // TODO add your handling code here:
        cancelFilmButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelFilmButtonFocusGained

    private void cancelFilmButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelFilmButtonFocusLost
        // TODO add your handling code here:
        cancelFilmButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelFilmButtonFocusLost

    private void cancelFilmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelFilmButtonMouseExited
        // TODO add your handling code here:
        cancelFilmButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelFilmButtonMouseExited

    private void cancelFilmButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelFilmButtonMouseEntered
        // TODO add your handling code here:
        cancelFilmButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelFilmButtonMouseEntered

    private void cancelFilmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelFilmButtonActionPerformed
        // TODO add your handling code here:
        titleFilmTF.setText("");
        durationFilmTF.setText("");
        ageFilmTF.setText("");
        directorFilmTF.setText("");
        filmDialog.setVisible(false);
        filmDialog.dispose();
    }//GEN-LAST:event_cancelFilmButtonActionPerformed

    private void purchaseSeriesButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseSeriesButtonFocusGained
        // TODO add your handling code here:
        purchaseSeriesButton.setBorderPainted(true);
    }//GEN-LAST:event_purchaseSeriesButtonFocusGained

    private void purchaseSeriesButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_purchaseSeriesButtonFocusLost
        // TODO add your handling code here:
        purchaseSeriesButton.setBorderPainted(false);
    }//GEN-LAST:event_purchaseSeriesButtonFocusLost

    private void purchaseSeriesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseSeriesButtonMouseExited
        // TODO add your handling code here:
        purchaseSeriesButton.setBorderPainted(false);
    }//GEN-LAST:event_purchaseSeriesButtonMouseExited

    private void purchaseSeriesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseSeriesButtonMouseEntered
        // TODO add your handling code here:
        purchaseSeriesButton.setBorderPainted(true);
    }//GEN-LAST:event_purchaseSeriesButtonMouseEntered

    private void purchaseSeriesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseSeriesButtonActionPerformed
        // TODO add your handling code here:
        String title = titleSeriesTF.getText();
        int duration = Integer.parseInt(durationSeriesTF.getText());
        int age = Integer.parseInt(ageSeriesTF.getText());
        int epNum = Integer.parseInt(episodeSeriesTF.getText());
        String epName = epTitleTF.getText();
        Series s = new Series(title, duration, age, epNum, epName);
        myMedia.addMedia(s);
        File updateMedia = new File("/Users/ashayapi/Desktop/MediaPlayList/src/Database/"+ user.getUsername() + ".txt");
        myMedia.saveToFile(updateMedia);
        walletLabel.setText("Balance: Â£" + user.getWallet()/100 + "." + user.getWallet()%100);
        User.updateDatabase(user, user.getUsername());
        titleSeriesTF.setText("");
        durationSeriesTF.setText("");
        ageSeriesTF.setText("");
        episodeSeriesTF.setText("");
        epTitleTF.setText("");
        seriesDialog.setVisible(false);
        seriesDialog.dispose();
        purchaseFrame.setVisible(false);
        purchaseCB.setSelectedIndex(0);
        purchaseFrame.dispose();
    }//GEN-LAST:event_purchaseSeriesButtonActionPerformed

    private void cancelSeriesButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelSeriesButtonFocusGained
        // TODO add your handling code here:
        cancelSeriesButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelSeriesButtonFocusGained

    private void cancelSeriesButtonFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cancelSeriesButtonFocusLost
        // TODO add your handling code here:
        cancelSeriesButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelSeriesButtonFocusLost

    private void cancelSeriesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelSeriesButtonMouseExited
        // TODO add your handling code here:
        cancelSeriesButton.setBorderPainted(false);
    }//GEN-LAST:event_cancelSeriesButtonMouseExited

    private void cancelSeriesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelSeriesButtonMouseEntered
        // TODO add your handling code here:
        cancelSeriesButton.setBorderPainted(true);
    }//GEN-LAST:event_cancelSeriesButtonMouseEntered

    private void cancelSeriesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSeriesButtonActionPerformed
        // TODO add your handling code here:
        titleSeriesTF.setText("");
        durationSeriesTF.setText("");
        ageSeriesTF.setText("");
        episodeSeriesTF.setText("");
        epTitleTF.setText("");
        seriesDialog.setVisible(false);
        seriesDialog.dispose();
    }//GEN-LAST:event_cancelSeriesButtonActionPerformed

    private void changeNameMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeNameMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_changeNameMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         -
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JFrame addMediaFrame;
    private javax.swing.JMenuItem addMenuItem;
    private javax.swing.JButton addMyMediaButton;
    private javax.swing.JPanel addToPlaylistPanel;
    private javax.swing.JTextField ageFilmTF;
    private javax.swing.JTextField ageSeriesTF;
    private javax.swing.JTextField artistTextField;
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JLabel balanceWithdrawalLabel;
    private javax.swing.JFrame browseMediaFrame;
    private javax.swing.JList<String> browseMediaList;
    private javax.swing.JMenuItem browseMediaMenuItem;
    private javax.swing.JPanel browseMediaPanel;
    private javax.swing.JPanel buttonsAddPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton cancelFilmButton;
    private javax.swing.JButton cancelFreebiesButton;
    private javax.swing.JButton cancelMusicButton;
    private javax.swing.JButton cancelPurchaseButton;
    private javax.swing.JButton cancelSeriesButton;
    private javax.swing.JButton cancelSortButton;
    private javax.swing.JButton cancelWithdrawalButton;
    private javax.swing.JMenuItem changeNameMenuItem;
    private javax.swing.JButton closeAddMediaButton;
    private javax.swing.JButton closeBrowseMediaButton;
    private javax.swing.JRadioButton costSortRB;
    private javax.swing.JPanel currentlyPlayingPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField directorFilmTF;
    private javax.swing.JTextField durationFilmTF;
    private javax.swing.JTextField durationSeriesTF;
    private javax.swing.JRadioButton durationSortRB;
    private javax.swing.JTextField durationTextField;
    private javax.swing.JTextField epTitleTF;
    private javax.swing.JTextField episodeSeriesTF;
    private javax.swing.JMenu exitMenu;
    private javax.swing.JDialog filmDialog;
    private javax.swing.JPanel filmPanel;
    private javax.swing.JFrame freebiesFrame;
    private javax.swing.JList<String> freebiesList;
    private javax.swing.JMenu freebiesMenu;
    private javax.swing.JMenuItem freebiesMenuItem;
    private javax.swing.JPanel freebiesPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenuItem logOutMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton moveDownButton;
    private javax.swing.JButton moveUpButton;
    private javax.swing.JDialog musicDialog;
    private javax.swing.JPanel musicPanel;
    private javax.swing.JList<String> myMediaList;
    private javax.swing.JMenu myMediaMenu;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton photoButton;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JLabel playListNameLabel;
    private javax.swing.JPanel playingListPanel;
    private javax.swing.JList<String> playlistList;
    private javax.swing.JMenu playlistMenu;
    private javax.swing.JButton previousButton;
    private javax.swing.JMenu profileMenu;
    private javax.swing.JComboBox<String> purchaseCB;
    private javax.swing.JButton purchaseFilmButton;
    private javax.swing.JFrame purchaseFrame;
    private javax.swing.JMenuItem purchaseMenuItem;
    private javax.swing.JButton purchaseMusicButton;
    private javax.swing.JPanel purchasePanel;
    private javax.swing.JButton purchaseSeriesButton;
    private javax.swing.JLabel runtimeLabel;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JDialog seriesDialog;
    private javax.swing.JPanel seriesPanel;
    private javax.swing.JButton shuffleButton;
    private javax.swing.JButton sortButton;
    private javax.swing.JDialog sortDialog;
    private javax.swing.ButtonGroup sortGroup;
    private javax.swing.JMenuItem sortMenuItem;
    private javax.swing.JPanel sortPanel;
    private javax.swing.JLabel suggestedLabel;
    private javax.swing.JPanel suggestedPanel;
    private javax.swing.JTextField titleFilmTF;
    private javax.swing.JTextField titleSeriesTF;
    private javax.swing.JRadioButton titleSortRB;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JTextField topUpAmountTextField;
    private javax.swing.JButton topUpButton;
    private javax.swing.JMenuItem topUpMenuItem;
    private javax.swing.JPanel topUpPanel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JPanel userPanel;
    private javax.swing.JDialog walletDialog;
    private javax.swing.JLabel walletLabel;
    private javax.swing.JButton withdrawButton;
    private javax.swing.JMenuItem withdrawMenuItem;
    private javax.swing.JPanel withdrawPanel;
    private javax.swing.JTextField withdrawalAmountTextField;
    // End of variables declaration//GEN-END:variables
}
